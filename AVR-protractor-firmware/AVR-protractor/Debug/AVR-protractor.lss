
AVR-protractor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000173e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000036  00800060  0000173e  000017d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000002c  00800096  00800096  00001808  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001808  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001838  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000198  00000000  00000000  00001874  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002fc5  00000000  00000000  00001a0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fa6  00000000  00000000  000049d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d9f  00000000  00000000  00005977  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004d4  00000000  00000000  00006718  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a2d  00000000  00000000  00006bec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000195b  00000000  00000000  00007619  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000180  00000000  00000000  00008f74  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	b5 c0       	rjmp	.+362    	; 0x16c <__ctors_end>
       2:	cf c0       	rjmp	.+414    	; 0x1a2 <__bad_interrupt>
       4:	ce c0       	rjmp	.+412    	; 0x1a2 <__bad_interrupt>
       6:	cd c0       	rjmp	.+410    	; 0x1a2 <__bad_interrupt>
       8:	cc c0       	rjmp	.+408    	; 0x1a2 <__bad_interrupt>
       a:	cb c0       	rjmp	.+406    	; 0x1a2 <__bad_interrupt>
       c:	ca c0       	rjmp	.+404    	; 0x1a2 <__bad_interrupt>
       e:	c9 c0       	rjmp	.+402    	; 0x1a2 <__bad_interrupt>
      10:	c8 c0       	rjmp	.+400    	; 0x1a2 <__bad_interrupt>
      12:	c7 c0       	rjmp	.+398    	; 0x1a2 <__bad_interrupt>
      14:	c6 c0       	rjmp	.+396    	; 0x1a2 <__bad_interrupt>
      16:	c5 c0       	rjmp	.+394    	; 0x1a2 <__bad_interrupt>
      18:	c4 c0       	rjmp	.+392    	; 0x1a2 <__bad_interrupt>
      1a:	c3 c0       	rjmp	.+390    	; 0x1a2 <__bad_interrupt>
      1c:	c2 c0       	rjmp	.+388    	; 0x1a2 <__bad_interrupt>
      1e:	c1 c0       	rjmp	.+386    	; 0x1a2 <__bad_interrupt>
      20:	c0 c0       	rjmp	.+384    	; 0x1a2 <__bad_interrupt>
      22:	bf c0       	rjmp	.+382    	; 0x1a2 <__bad_interrupt>
      24:	be c0       	rjmp	.+380    	; 0x1a2 <__bad_interrupt>
      26:	08 4a       	sbci	r16, 0xA8	; 168
      28:	d7 3b       	cpi	r29, 0xB7	; 183
      2a:	3b ce       	rjmp	.-906    	; 0xfffffca2 <__eeprom_end+0xff7efca2>
      2c:	01 6e       	ori	r16, 0xE1	; 225
      2e:	84 bc       	out	0x24, r8	; 36
      30:	bf fd       	.word	0xfdbf	; ????
      32:	c1 2f       	mov	r28, r17
      34:	3d 6c       	ori	r19, 0xCD	; 205
      36:	74 31       	cpi	r23, 0x14	; 20
      38:	9a bd       	out	0x2a, r25	; 42
      3a:	56 83       	std	Z+6, r21	; 0x06
      3c:	3d da       	rcall	.-2950   	; 0xfffff4b8 <__eeprom_end+0xff7ef4b8>
      3e:	3d 00       	.word	0x003d	; ????
      40:	c7 7f       	andi	r28, 0xF7	; 247
      42:	11 be       	out	0x31, r1	; 49
      44:	d9 e4       	ldi	r29, 0x49	; 73
      46:	bb 4c       	sbci	r27, 0xCB	; 203
      48:	3e 91       	ld	r19, -X
      4a:	6b aa       	std	Y+51, r6	; 0x33
      4c:	aa be       	out	0x3a, r10	; 58
      4e:	00 00       	nop
      50:	00 80       	ld	r0, Z
      52:	3f 05       	cpc	r19, r15
      54:	a8 4c       	sbci	r26, 0xC8	; 200
      56:	cd b2       	in	r12, 0x1d	; 29
      58:	d4 4e       	sbci	r29, 0xE4	; 228
      5a:	b9 38       	cpi	r27, 0x89	; 137
      5c:	36 a9       	ldd	r19, Z+54	; 0x36
      5e:	02 0c       	add	r0, r2
      60:	50 b9       	out	0x00, r21	; 0
      62:	91 86       	std	Z+9, r9	; 0x09
      64:	88 08       	sbc	r8, r8
      66:	3c a6       	std	Y+44, r3	; 0x2c
      68:	aa aa       	std	Y+50, r10	; 0x32
      6a:	2a be       	out	0x3a, r2	; 58
      6c:	00 00       	nop
      6e:	00 80       	ld	r0, Z
      70:	3f 00       	.word	0x003f	; ????

00000072 <__trampolines_end>:
      72:	00 40       	sbci	r16, 0x00	; 0
      74:	7a 10       	cpse	r7, r10
      76:	f3 5a       	subi	r31, 0xA3	; 163
      78:	00 a0       	ldd	r0, Z+32	; 0x20
      7a:	72 4e       	sbci	r23, 0xE2	; 226
      7c:	18 09       	sbc	r17, r8
      7e:	00 10       	cpse	r0, r0
      80:	a5 d4       	rcall	.+2378   	; 0x9cc <_ZN7SSD130615sendFramebufferEPhh+0xa0>
      82:	e8 00       	.word	0x00e8	; ????
      84:	00 e8       	ldi	r16, 0x80	; 128
      86:	76 48       	sbci	r23, 0x86	; 134
      88:	17 00       	.word	0x0017	; ????
      8a:	00 e4       	ldi	r16, 0x40	; 64
      8c:	0b 54       	subi	r16, 0x4B	; 75
      8e:	02 00       	.word	0x0002	; ????
      90:	00 ca       	rjmp	.-3072   	; 0xfffff492 <__eeprom_end+0xff7ef492>
      92:	9a 3b       	cpi	r25, 0xBA	; 186
      94:	00 00       	nop
      96:	00 e1       	ldi	r16, 0x10	; 16
      98:	f5 05       	cpc	r31, r5
      9a:	00 00       	nop
      9c:	80 96       	adiw	r24, 0x20	; 32
      9e:	98 00       	.word	0x0098	; ????
      a0:	00 00       	nop
      a2:	40 42       	sbci	r20, 0x20	; 32
      a4:	0f 00       	.word	0x000f	; ????
      a6:	00 00       	nop
      a8:	a0 86       	std	Z+8, r10	; 0x08
      aa:	01 00       	.word	0x0001	; ????
      ac:	00 00       	nop
      ae:	10 27       	eor	r17, r16
      b0:	00 00       	nop
      b2:	00 00       	nop
      b4:	e8 03       	fmulsu	r22, r16
      b6:	00 00       	nop
      b8:	00 00       	nop
      ba:	64 00       	.word	0x0064	; ????
      bc:	00 00       	nop
      be:	00 00       	nop
      c0:	0a 00       	.word	0x000a	; ????
      c2:	00 00       	nop
      c4:	00 00       	nop
      c6:	01 00       	.word	0x0001	; ????
      c8:	00 00       	nop
      ca:	00 00       	nop
      cc:	2c 76       	andi	r18, 0x6C	; 108
      ce:	d8 88       	ldd	r13, Y+16	; 0x10
      d0:	dc 67       	ori	r29, 0x7C	; 124
      d2:	4f 08       	sbc	r4, r15
      d4:	23 df       	rcall	.-442    	; 0xffffff1c <__eeprom_end+0xff7eff1c>
      d6:	c1 df       	rcall	.-126    	; 0x5a <__SREG__+0x1b>
      d8:	ae 59       	subi	r26, 0x9E	; 158
      da:	e1 b1       	in	r30, 0x01	; 1
      dc:	b7 96       	adiw	r30, 0x27	; 39
      de:	e5 e3       	ldi	r30, 0x35	; 53
      e0:	e4 53       	subi	r30, 0x34	; 52
      e2:	c6 3a       	cpi	r28, 0xA6	; 166
      e4:	e6 51       	subi	r30, 0x16	; 22
      e6:	99 76       	andi	r25, 0x69	; 105
      e8:	96 e8       	ldi	r25, 0x86	; 134
      ea:	e6 c2       	rjmp	.+1484   	; 0x6b8 <__stack+0x259>
      ec:	84 26       	eor	r8, r20
      ee:	eb 89       	ldd	r30, Y+19	; 0x13
      f0:	8c 9b       	sbis	0x11, 4	; 17
      f2:	62 ed       	ldi	r22, 0xD2	; 210
      f4:	40 7c       	andi	r20, 0xC0	; 192
      f6:	6f fc       	.word	0xfc6f	; ????
      f8:	ef bc       	out	0x2f, r14	; 47
      fa:	9c 9f       	mul	r25, r28
      fc:	40 f2       	brcs	.-112    	; 0x8e <__trampolines_end+0x1c>
      fe:	ba a5       	ldd	r27, Y+42	; 0x2a
     100:	6f a5       	ldd	r22, Y+47	; 0x2f
     102:	f4 90       	lpm	r15, Z
     104:	05 5a       	subi	r16, 0xA5	; 165
     106:	2a f7       	brpl	.-54     	; 0xd2 <__trampolines_end+0x60>
     108:	5c 93       	st	X, r21
     10a:	6b 6c       	ori	r22, 0xCB	; 203
     10c:	f9 67       	ori	r31, 0x79	; 121
     10e:	6d c1       	rjmp	.+730    	; 0x3ea <_ZN6LIS3DH7readAccEhh+0xe>
     110:	1b fc       	.word	0xfc1b	; ????
     112:	e0 e4       	ldi	r30, 0x40	; 64
     114:	0d 47       	sbci	r16, 0x7D	; 125
     116:	fe f5       	brtc	.+126    	; 0x196 <.do_clear_bss_loop>
     118:	20 e6       	ldi	r18, 0x60	; 96
     11a:	b5 00       	.word	0x00b5	; ????
     11c:	d0 ed       	ldi	r29, 0xD0	; 208
     11e:	90 2e       	mov	r9, r16
     120:	03 00       	.word	0x0003	; ????
     122:	94 35       	cpi	r25, 0x54	; 84
     124:	77 05       	cpc	r23, r7
     126:	00 80       	ld	r0, Z
     128:	84 1e       	adc	r8, r20
     12a:	08 00       	.word	0x0008	; ????
     12c:	00 20       	and	r0, r0
     12e:	4e 0a       	sbc	r4, r30
     130:	00 00       	nop
     132:	00 c8       	rjmp	.-4096   	; 0xfffff134 <__eeprom_end+0xff7ef134>
     134:	0c 33       	cpi	r16, 0x3C	; 60
     136:	33 33       	cpi	r19, 0x33	; 51
     138:	33 0f       	add	r19, r19
     13a:	98 6e       	ori	r25, 0xE8	; 232
     13c:	12 83       	std	Z+2, r17	; 0x02
     13e:	11 41       	sbci	r17, 0x11	; 17
     140:	ef 8d       	ldd	r30, Y+31	; 0x1f
     142:	21 14       	cp	r2, r1
     144:	89 3b       	cpi	r24, 0xB9	; 185
     146:	e6 55       	subi	r30, 0x56	; 86
     148:	16 cf       	rjmp	.-468    	; 0xffffff76 <__eeprom_end+0xff7eff76>
     14a:	fe e6       	ldi	r31, 0x6E	; 110
     14c:	db 18       	sub	r13, r11
     14e:	d1 84       	ldd	r13, Z+9	; 0x09
     150:	4b 38       	cpi	r20, 0x8B	; 139
     152:	1b f7       	brvc	.-58     	; 0x11a <__trampolines_end+0xa8>
     154:	7c 1d       	adc	r23, r12
     156:	90 1d       	adc	r25, r0
     158:	a4 bb       	out	0x14, r26	; 20
     15a:	e4 24       	eor	r14, r4
     15c:	20 32       	cpi	r18, 0x20	; 32
     15e:	84 72       	andi	r24, 0x24	; 36
     160:	5e 22       	and	r5, r30
     162:	81 00       	.word	0x0081	; ????
     164:	c9 f1       	breq	.+114    	; 0x1d8 <_ZN11Framebuffer9drawPixelEhh+0x34>
     166:	24 ec       	ldi	r18, 0xC4	; 196
     168:	a1 e5       	ldi	r26, 0x51	; 81
     16a:	3d 27       	eor	r19, r29

0000016c <__ctors_end>:
     16c:	11 24       	eor	r1, r1
     16e:	1f be       	out	0x3f, r1	; 63
     170:	cf e5       	ldi	r28, 0x5F	; 95
     172:	d4 e0       	ldi	r29, 0x04	; 4
     174:	de bf       	out	0x3e, r29	; 62
     176:	cd bf       	out	0x3d, r28	; 61

00000178 <__do_copy_data>:
     178:	10 e0       	ldi	r17, 0x00	; 0
     17a:	a0 e6       	ldi	r26, 0x60	; 96
     17c:	b0 e0       	ldi	r27, 0x00	; 0
     17e:	ee e3       	ldi	r30, 0x3E	; 62
     180:	f7 e1       	ldi	r31, 0x17	; 23
     182:	02 c0       	rjmp	.+4      	; 0x188 <__do_copy_data+0x10>
     184:	05 90       	lpm	r0, Z+
     186:	0d 92       	st	X+, r0
     188:	a6 39       	cpi	r26, 0x96	; 150
     18a:	b1 07       	cpc	r27, r17
     18c:	d9 f7       	brne	.-10     	; 0x184 <__do_copy_data+0xc>

0000018e <__do_clear_bss>:
     18e:	20 e0       	ldi	r18, 0x00	; 0
     190:	a6 e9       	ldi	r26, 0x96	; 150
     192:	b0 e0       	ldi	r27, 0x00	; 0
     194:	01 c0       	rjmp	.+2      	; 0x198 <.do_clear_bss_start>

00000196 <.do_clear_bss_loop>:
     196:	1d 92       	st	X+, r1

00000198 <.do_clear_bss_start>:
     198:	a2 3c       	cpi	r26, 0xC2	; 194
     19a:	b2 07       	cpc	r27, r18
     19c:	e1 f7       	brne	.-8      	; 0x196 <.do_clear_bss_loop>
     19e:	38 d1       	rcall	.+624    	; 0x410 <main>
     1a0:	cc ca       	rjmp	.-2664   	; 0xfffff73a <__eeprom_end+0xff7ef73a>

000001a2 <__bad_interrupt>:
     1a2:	2e cf       	rjmp	.-420    	; 0x0 <__vectors>

000001a4 <_ZN11Framebuffer9drawPixelEhh>:
		this->buffer[buffer_location] = 0x00;
	}
}

void Framebuffer::invert(uint8_t status) {
	this->oled.invert(status);
     1a4:	60 34       	cpi	r22, 0x40	; 64
     1a6:	d0 f4       	brcc	.+52     	; 0x1dc <_ZN11Framebuffer9drawPixelEhh+0x38>
     1a8:	40 34       	cpi	r20, 0x40	; 64
     1aa:	c0 f4       	brcc	.+48     	; 0x1dc <_ZN11Framebuffer9drawPixelEhh+0x38>
     1ac:	24 2f       	mov	r18, r20
     1ae:	26 95       	lsr	r18
     1b0:	26 95       	lsr	r18
     1b2:	26 95       	lsr	r18
     1b4:	70 e0       	ldi	r23, 0x00	; 0
     1b6:	30 e4       	ldi	r19, 0x40	; 64
     1b8:	23 9f       	mul	r18, r19
     1ba:	60 0d       	add	r22, r0
     1bc:	71 1d       	adc	r23, r1
     1be:	11 24       	eor	r1, r1
     1c0:	fc 01       	movw	r30, r24
     1c2:	e6 0f       	add	r30, r22
     1c4:	f7 1f       	adc	r31, r23
     1c6:	47 70       	andi	r20, 0x07	; 7
     1c8:	81 e0       	ldi	r24, 0x01	; 1
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <_ZN11Framebuffer9drawPixelEhh+0x2e>
     1ce:	88 0f       	add	r24, r24
     1d0:	99 1f       	adc	r25, r25
     1d2:	4a 95       	dec	r20
     1d4:	e2 f7       	brpl	.-8      	; 0x1ce <_ZN11Framebuffer9drawPixelEhh+0x2a>
     1d6:	90 81       	ld	r25, Z
     1d8:	89 2b       	or	r24, r25
     1da:	80 83       	st	Z, r24
     1dc:	08 95       	ret

000001de <_ZN11Framebuffer9drawVLineEhhh>:
     1de:	ff 92       	push	r15
     1e0:	0f 93       	push	r16
     1e2:	1f 93       	push	r17
     1e4:	cf 93       	push	r28
     1e6:	df 93       	push	r29
     1e8:	22 23       	and	r18, r18
     1ea:	61 f0       	breq	.+24     	; 0x204 <_ZN11Framebuffer9drawVLineEhhh+0x26>
     1ec:	c4 2f       	mov	r28, r20
     1ee:	f6 2e       	mov	r15, r22
     1f0:	8c 01       	movw	r16, r24
     1f2:	d2 2f       	mov	r29, r18
     1f4:	d4 0f       	add	r29, r20
     1f6:	4c 2f       	mov	r20, r28
     1f8:	6f 2d       	mov	r22, r15
     1fa:	c8 01       	movw	r24, r16
     1fc:	d3 df       	rcall	.-90     	; 0x1a4 <_ZN11Framebuffer9drawPixelEhh>
     1fe:	cf 5f       	subi	r28, 0xFF	; 255
     200:	cd 13       	cpse	r28, r29
     202:	f9 cf       	rjmp	.-14     	; 0x1f6 <_ZN11Framebuffer9drawVLineEhhh+0x18>
     204:	df 91       	pop	r29
     206:	cf 91       	pop	r28
     208:	1f 91       	pop	r17
     20a:	0f 91       	pop	r16
     20c:	ff 90       	pop	r15
     20e:	08 95       	ret

00000210 <_ZN11Framebuffer9drawHLineEhhh>:
     210:	ff 92       	push	r15
     212:	0f 93       	push	r16
     214:	1f 93       	push	r17
     216:	cf 93       	push	r28
     218:	df 93       	push	r29
     21a:	22 23       	and	r18, r18
     21c:	61 f0       	breq	.+24     	; 0x236 <_ZN11Framebuffer9drawHLineEhhh+0x26>
     21e:	f4 2e       	mov	r15, r20
     220:	c6 2f       	mov	r28, r22
     222:	8c 01       	movw	r16, r24
     224:	d2 2f       	mov	r29, r18
     226:	d6 0f       	add	r29, r22
     228:	4f 2d       	mov	r20, r15
     22a:	6c 2f       	mov	r22, r28
     22c:	c8 01       	movw	r24, r16
     22e:	ba df       	rcall	.-140    	; 0x1a4 <_ZN11Framebuffer9drawPixelEhh>
     230:	cf 5f       	subi	r28, 0xFF	; 255
     232:	cd 13       	cpse	r28, r29
     234:	f9 cf       	rjmp	.-14     	; 0x228 <_ZN11Framebuffer9drawHLineEhhh+0x18>
     236:	df 91       	pop	r29
     238:	cf 91       	pop	r28
     23a:	1f 91       	pop	r17
     23c:	0f 91       	pop	r16
     23e:	ff 90       	pop	r15
     240:	08 95       	ret

00000242 <_ZN11Framebuffer13drawRectangleEhhhh>:
     242:	cf 92       	push	r12
     244:	df 92       	push	r13
     246:	ef 92       	push	r14
     248:	ff 92       	push	r15
     24a:	0f 93       	push	r16
     24c:	1f 93       	push	r17
     24e:	cf 93       	push	r28
     250:	df 93       	push	r29
     252:	ec 01       	movw	r28, r24
     254:	f6 2e       	mov	r15, r22
     256:	14 2f       	mov	r17, r20
     258:	d2 2e       	mov	r13, r18
     25a:	e2 2e       	mov	r14, r18
     25c:	e6 1a       	sub	r14, r22
     25e:	e3 94       	inc	r14
     260:	c0 2e       	mov	r12, r16
     262:	c4 1a       	sub	r12, r20
     264:	2e 2d       	mov	r18, r14
     266:	d4 df       	rcall	.-88     	; 0x210 <_ZN11Framebuffer9drawHLineEhhh>
     268:	2e 2d       	mov	r18, r14
     26a:	40 2f       	mov	r20, r16
     26c:	6f 2d       	mov	r22, r15
     26e:	ce 01       	movw	r24, r28
     270:	cf df       	rcall	.-98     	; 0x210 <_ZN11Framebuffer9drawHLineEhhh>
     272:	2c 2d       	mov	r18, r12
     274:	41 2f       	mov	r20, r17
     276:	6f 2d       	mov	r22, r15
     278:	ce 01       	movw	r24, r28
     27a:	b1 df       	rcall	.-158    	; 0x1de <_ZN11Framebuffer9drawVLineEhhh>
     27c:	2c 2d       	mov	r18, r12
     27e:	41 2f       	mov	r20, r17
     280:	6d 2d       	mov	r22, r13
     282:	ce 01       	movw	r24, r28
     284:	ac df       	rcall	.-168    	; 0x1de <_ZN11Framebuffer9drawVLineEhhh>
     286:	df 91       	pop	r29
     288:	cf 91       	pop	r28
     28a:	1f 91       	pop	r17
     28c:	0f 91       	pop	r16
     28e:	ff 90       	pop	r15
     290:	ef 90       	pop	r14
     292:	df 90       	pop	r13
     294:	cf 90       	pop	r12
     296:	08 95       	ret

00000298 <_ZN11Framebuffer5clearEv>:
     298:	fc 01       	movw	r30, r24
     29a:	9e 5f       	subi	r25, 0xFE	; 254
     29c:	11 92       	st	Z+, r1
     29e:	e8 17       	cp	r30, r24
     2a0:	f9 07       	cpc	r31, r25
     2a2:	e1 f7       	brne	.-8      	; 0x29c <_ZN11Framebuffer5clearEv+0x4>
     2a4:	08 95       	ret

000002a6 <_ZN11FramebufferC1Ev>:
     2a6:	cf 93       	push	r28
     2a8:	df 93       	push	r29
     2aa:	ec 01       	movw	r28, r24
     2ac:	9e 5f       	subi	r25, 0xFE	; 254
     2ae:	e9 d2       	rcall	.+1490   	; 0x882 <_ZN7SSD1306C1Ev>
     2b0:	ce 01       	movw	r24, r28
     2b2:	f2 df       	rcall	.-28     	; 0x298 <_ZN11Framebuffer5clearEv>
     2b4:	df 91       	pop	r29
     2b6:	cf 91       	pop	r28
     2b8:	08 95       	ret

000002ba <_ZN11Framebuffer4showEh>:
}

void Framebuffer::show(uint8_t rightHalf) {
     2ba:	46 2f       	mov	r20, r22
	this->oled.sendFramebuffer(this->buffer, rightHalf);	
     2bc:	bc 01       	movw	r22, r24
     2be:	9e 5f       	subi	r25, 0xFE	; 254
     2c0:	35 d3       	rcall	.+1642   	; 0x92c <_ZN7SSD130615sendFramebufferEPhh>
     2c2:	08 95       	ret

000002c4 <_ZN3I2CC1Ev>:
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	while(!(TWCR & (1<<TWINT)));

	return TWDR;

}
     2c4:	08 95       	ret

000002c6 <_ZN3I2C4initEh>:
     2c6:	fc 01       	movw	r30, r24
     2c8:	60 83       	st	Z, r22
     2ca:	11 b8       	out	0x01, r1	; 1
     2cc:	88 e4       	ldi	r24, 0x48	; 72
     2ce:	80 b9       	out	0x00, r24	; 0
     2d0:	08 95       	ret

000002d2 <_ZN3I2C5startEv>:
     2d2:	fc 01       	movw	r30, r24
     2d4:	84 ea       	ldi	r24, 0xA4	; 164
     2d6:	86 bf       	out	0x36, r24	; 54
     2d8:	06 b6       	in	r0, 0x36	; 54
     2da:	07 fe       	sbrs	r0, 7
     2dc:	fd cf       	rjmp	.-6      	; 0x2d8 <_ZN3I2C5startEv+0x6>
     2de:	91 b1       	in	r25, 0x01	; 1
     2e0:	98 7f       	andi	r25, 0xF8	; 248
     2e2:	91 83       	std	Z+1, r25	; 0x01
     2e4:	98 30       	cpi	r25, 0x08	; 8
     2e6:	11 f0       	breq	.+4      	; 0x2ec <_ZN3I2C5startEv+0x1a>
     2e8:	90 31       	cpi	r25, 0x10	; 16
     2ea:	89 f4       	brne	.+34     	; 0x30e <_ZN3I2C5startEv+0x3c>
     2ec:	80 81       	ld	r24, Z
     2ee:	83 b9       	out	0x03, r24	; 3
     2f0:	84 e8       	ldi	r24, 0x84	; 132
     2f2:	86 bf       	out	0x36, r24	; 54
     2f4:	06 b6       	in	r0, 0x36	; 54
     2f6:	07 fe       	sbrs	r0, 7
     2f8:	fd cf       	rjmp	.-6      	; 0x2f4 <_ZN3I2C5startEv+0x22>
     2fa:	91 b1       	in	r25, 0x01	; 1
     2fc:	98 7f       	andi	r25, 0xF8	; 248
     2fe:	91 83       	std	Z+1, r25	; 0x01
     300:	98 31       	cpi	r25, 0x18	; 24
     302:	39 f0       	breq	.+14     	; 0x312 <_ZN3I2C5startEv+0x40>
     304:	81 e0       	ldi	r24, 0x01	; 1
     306:	90 34       	cpi	r25, 0x40	; 64
     308:	29 f4       	brne	.+10     	; 0x314 <_ZN3I2C5startEv+0x42>
     30a:	80 e0       	ldi	r24, 0x00	; 0
     30c:	08 95       	ret
     30e:	81 e0       	ldi	r24, 0x01	; 1
     310:	08 95       	ret
     312:	80 e0       	ldi	r24, 0x00	; 0
     314:	08 95       	ret

00000316 <_ZN3I2C5writeEh>:
     316:	fc 01       	movw	r30, r24
     318:	63 b9       	out	0x03, r22	; 3
     31a:	84 e8       	ldi	r24, 0x84	; 132
     31c:	86 bf       	out	0x36, r24	; 54
     31e:	06 b6       	in	r0, 0x36	; 54
     320:	07 fe       	sbrs	r0, 7
     322:	fd cf       	rjmp	.-6      	; 0x31e <_ZN3I2C5writeEh+0x8>
     324:	91 b1       	in	r25, 0x01	; 1
     326:	98 7f       	andi	r25, 0xF8	; 248
     328:	91 83       	std	Z+1, r25	; 0x01
     32a:	81 e0       	ldi	r24, 0x01	; 1
     32c:	98 32       	cpi	r25, 0x28	; 40
     32e:	09 f4       	brne	.+2      	; 0x332 <_ZN3I2C5writeEh+0x1c>
     330:	80 e0       	ldi	r24, 0x00	; 0
     332:	08 95       	ret

00000334 <_ZN3I2C4stopEv>:
     334:	84 e9       	ldi	r24, 0x94	; 148
     336:	86 bf       	out	0x36, r24	; 54
     338:	06 b6       	in	r0, 0x36	; 54
     33a:	04 fc       	sbrc	r0, 4
     33c:	fd cf       	rjmp	.-6      	; 0x338 <_ZN3I2C4stopEv+0x4>
     33e:	08 95       	ret

00000340 <_ZN3I2C7readNakEv>:

uint8_t I2C::readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     340:	84 e8       	ldi	r24, 0x84	; 132
     342:	86 bf       	out	0x36, r24	; 54
	while(!(TWCR & (1<<TWINT)));
     344:	06 b6       	in	r0, 0x36	; 54
     346:	07 fe       	sbrs	r0, 7
     348:	fd cf       	rjmp	.-6      	; 0x344 <_ZN3I2C7readNakEv+0x4>
	
	return TWDR;
     34a:	83 b1       	in	r24, 0x03	; 3
}
     34c:	08 95       	ret

0000034e <_ZN6LIS3DH7sendCmdEhh>:
	i2c_acc_w.init(LIS3_ADRESS_W);
	i2c_acc_r.init(LIS3_ADRESS_R);
	sendCmd(CTRL_REG1,0b00110111);
}

 void LIS3DH::sendCmd(uint8_t reg , uint8_t data){
     34e:	0f 93       	push	r16
     350:	1f 93       	push	r17
     352:	cf 93       	push	r28
     354:	df 93       	push	r29
     356:	ec 01       	movw	r28, r24
     358:	06 2f       	mov	r16, r22
     35a:	14 2f       	mov	r17, r20

	i2c_acc_w.start();
     35c:	ba df       	rcall	.-140    	; 0x2d2 <_ZN3I2C5startEv>
	i2c_acc_w.write(reg);
     35e:	60 2f       	mov	r22, r16
     360:	ce 01       	movw	r24, r28
     362:	d9 df       	rcall	.-78     	; 0x316 <_ZN3I2C5writeEh>
	i2c_acc_w.write(data);
     364:	61 2f       	mov	r22, r17
     366:	ce 01       	movw	r24, r28
     368:	d6 df       	rcall	.-84     	; 0x316 <_ZN3I2C5writeEh>
	i2c_acc_w.stop();
     36a:	ce 01       	movw	r24, r28
     36c:	e3 df       	rcall	.-58     	; 0x334 <_ZN3I2C4stopEv>

}
     36e:	df 91       	pop	r29
     370:	cf 91       	pop	r28
     372:	1f 91       	pop	r17
     374:	0f 91       	pop	r16
     376:	08 95       	ret

00000378 <_ZN6LIS3DHC1Ev>:
#include "LIS3DH.h"

#include <avr/io.h>
#include <stdint.h>

 LIS3DH::LIS3DH (){
     378:	0f 93       	push	r16
     37a:	1f 93       	push	r17
     37c:	cf 93       	push	r28
     37e:	df 93       	push	r29
     380:	ec 01       	movw	r28, r24
     382:	a0 df       	rcall	.-192    	; 0x2c4 <_ZN3I2CC1Ev>
     384:	8e 01       	movw	r16, r28
     386:	0e 5f       	subi	r16, 0xFE	; 254
     388:	1f 4f       	sbci	r17, 0xFF	; 255
     38a:	c8 01       	movw	r24, r16
     38c:	9b df       	rcall	.-202    	; 0x2c4 <_ZN3I2CC1Ev>
	i2c_acc_w.init(LIS3_ADRESS_W);
     38e:	62 e3       	ldi	r22, 0x32	; 50
     390:	ce 01       	movw	r24, r28
     392:	99 df       	rcall	.-206    	; 0x2c6 <_ZN3I2C4initEh>
	i2c_acc_r.init(LIS3_ADRESS_R);
     394:	63 e3       	ldi	r22, 0x33	; 51
     396:	c8 01       	movw	r24, r16
     398:	96 df       	rcall	.-212    	; 0x2c6 <_ZN3I2C4initEh>
	sendCmd(CTRL_REG1,0b00110111);
     39a:	47 e3       	ldi	r20, 0x37	; 55
     39c:	60 e2       	ldi	r22, 0x20	; 32
     39e:	ce 01       	movw	r24, r28
     3a0:	d6 df       	rcall	.-84     	; 0x34e <_ZN6LIS3DH7sendCmdEhh>
}
     3a2:	df 91       	pop	r29
     3a4:	cf 91       	pop	r28
     3a6:	1f 91       	pop	r17
     3a8:	0f 91       	pop	r16
     3aa:	08 95       	ret

000003ac <_ZN6LIS3DH7readRegEh>:
	i2c_acc_w.write(data);
	i2c_acc_w.stop();

}

uint8_t LIS3DH::readReg(uint8_t reg){
     3ac:	1f 93       	push	r17
     3ae:	cf 93       	push	r28
     3b0:	df 93       	push	r29
     3b2:	ec 01       	movw	r28, r24
     3b4:	16 2f       	mov	r17, r22
	uint8_t data;
	i2c_acc_w.start();
     3b6:	8d df       	rcall	.-230    	; 0x2d2 <_ZN3I2C5startEv>
	i2c_acc_w.write(reg);
     3b8:	61 2f       	mov	r22, r17
     3ba:	ce 01       	movw	r24, r28
     3bc:	ac df       	rcall	.-168    	; 0x316 <_ZN3I2C5writeEh>
	i2c_acc_w.stop();
     3be:	ce 01       	movw	r24, r28
     3c0:	b9 df       	rcall	.-142    	; 0x334 <_ZN3I2C4stopEv>
	
	i2c_acc_r.start();
     3c2:	22 96       	adiw	r28, 0x02	; 2
     3c4:	ce 01       	movw	r24, r28
     3c6:	85 df       	rcall	.-246    	; 0x2d2 <_ZN3I2C5startEv>
	data=i2c_acc_r.readNak();
     3c8:	ce 01       	movw	r24, r28
     3ca:	ba df       	rcall	.-140    	; 0x340 <_ZN3I2C7readNakEv>
     3cc:	18 2f       	mov	r17, r24
	i2c_acc_r.stop();
     3ce:	ce 01       	movw	r24, r28
     3d0:	b1 df       	rcall	.-158    	; 0x334 <_ZN3I2C4stopEv>
	return data;
	
}
     3d2:	81 2f       	mov	r24, r17
     3d4:	df 91       	pop	r29
     3d6:	cf 91       	pop	r28
     3d8:	1f 91       	pop	r17
     3da:	08 95       	ret

000003dc <_ZN6LIS3DH7readAccEhh>:

int16_t LIS3DH::readAcc(uint8_t regLow, uint8_t regHi){
     3dc:	ff 92       	push	r15
     3de:	0f 93       	push	r16
     3e0:	1f 93       	push	r17
     3e2:	cf 93       	push	r28
     3e4:	df 93       	push	r29
     3e6:	8c 01       	movw	r16, r24
     3e8:	f4 2e       	mov	r15, r20
	int8_t dataH;
	int16_t data;
		
	data= readReg(regLow);
     3ea:	e0 df       	rcall	.-64     	; 0x3ac <_ZN6LIS3DH7readRegEh>
     3ec:	c8 2f       	mov	r28, r24
     3ee:	d0 e0       	ldi	r29, 0x00	; 0
	dataH= readReg(regHi);
     3f0:	6f 2d       	mov	r22, r15
     3f2:	c8 01       	movw	r24, r16
     3f4:	db df       	rcall	.-74     	; 0x3ac <_ZN6LIS3DH7readRegEh>
	data|=dataH<<8;
	return data;
     3f6:	08 2e       	mov	r0, r24
     3f8:	00 0c       	add	r0, r0
     3fa:	99 0b       	sbc	r25, r25
     3fc:	98 2f       	mov	r25, r24
     3fe:	88 27       	eor	r24, r24
     400:	8c 2b       	or	r24, r28
     402:	9d 2b       	or	r25, r29
     404:	df 91       	pop	r29
     406:	cf 91       	pop	r28
     408:	1f 91       	pop	r17
     40a:	0f 91       	pop	r16
     40c:	ff 90       	pop	r15
     40e:	08 95       	ret

00000410 <main>:
uint8_t measurementMode=0; //0 for laying on back, 1 for laying on side

	

int main(void)
{
     410:	cf 93       	push	r28
     412:	df 93       	push	r29
     414:	cd b7       	in	r28, 0x3d	; 61
     416:	de b7       	in	r29, 0x3e	; 62
     418:	c8 51       	subi	r28, 0x18	; 24
     41a:	d2 40       	sbci	r29, 0x02	; 2
     41c:	0f b6       	in	r0, 0x3f	; 63
     41e:	f8 94       	cli
     420:	de bf       	out	0x3e, r29	; 62
     422:	0f be       	out	0x3f, r0	; 63
     424:	cd bf       	out	0x3d, r28	; 61
	SSD1306 disp;
     426:	ce 01       	movw	r24, r28
     428:	01 96       	adiw	r24, 0x01	; 1
     42a:	2b d2       	rcall	.+1110   	; 0x882 <_ZN7SSD1306C1Ev>
	LIS3DH acc;
     42c:	ce 01       	movw	r24, r28
     42e:	03 96       	adiw	r24, 0x03	; 3
     430:	a3 df       	rcall	.-186    	; 0x378 <_ZN6LIS3DHC1Ev>
	Framebuffer fb;
     432:	ce 01       	movw	r24, r28
     434:	07 96       	adiw	r24, 0x07	; 7
     436:	37 df       	rcall	.-402    	; 0x2a6 <_ZN11FramebufferC1Ev>
	
	
	USART_Init(25); //25 for 16MHz crystal and 38400 baud (0,2% error)
     438:	89 e1       	ldi	r24, 0x19	; 25
     43a:	90 e0       	ldi	r25, 0x00	; 0
     43c:	ce d2       	rcall	.+1436   	; 0x9da <_Z10USART_Initi>
	fb.clear();	
     43e:	ce 01       	movw	r24, r28
     440:	07 96       	adiw	r24, 0x07	; 7
     442:	2a df       	rcall	.-428    	; 0x298 <_ZN11Framebuffer5clearEv>
	fb.show(0);
     444:	60 e0       	ldi	r22, 0x00	; 0
     446:	ce 01       	movw	r24, r28
     448:	07 96       	adiw	r24, 0x07	; 7
     44a:	37 df       	rcall	.-402    	; 0x2ba <_ZN11Framebuffer4showEh>
	fb.show(1);
     44c:	61 e0       	ldi	r22, 0x01	; 1
     44e:	ce 01       	movw	r24, r28
     450:	07 96       	adiw	r24, 0x07	; 7
     452:	33 df       	rcall	.-410    	; 0x2ba <_ZN11Framebuffer4showEh>
			pitch= ((atan2(Xavg, sqrt(square(Yavg) + square(Zavg)))*180.0)/M_PI)+pitchOffset;
			roll = ((atan2(Yavg, sqrt(square(Zavg) + square(Xavg)))*180.0)/M_PI)+rollOffset;
			yaw = ((atan2(sqrt(square(Yavg) + square(Xavg)), Zavg)*180.0)/M_PI)+yawOffset;
			//////////////////////////////////////////////////////////////////change display mode depending on device orientation
			if(abs(roll)>70){
				measurementMode=1;
     454:	11 e0       	ldi	r17, 0x01	; 1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     456:	8f e3       	ldi	r24, 0x3F	; 63
     458:	9c e9       	ldi	r25, 0x9C	; 156
     45a:	01 97       	sbiw	r24, 0x01	; 1
     45c:	f1 f7       	brne	.-4      	; 0x45a <main+0x4a>
     45e:	00 c0       	rjmp	.+0      	; 0x460 <__stack+0x1>
     460:	00 00       	nop
    while (1) 
    { 
		_delay_ms(10);//screen refresh rate is delay*samplesToAvg
		
		//////////////////////////////////////////////////////////////////get reading from acc and add it to a sum
		 oneZ = acc.readAcc(0x2C,0x2D);
     462:	4d e2       	ldi	r20, 0x2D	; 45
     464:	6c e2       	ldi	r22, 0x2C	; 44
     466:	ce 01       	movw	r24, r28
     468:	03 96       	adiw	r24, 0x03	; 3
     46a:	b8 df       	rcall	.-144    	; 0x3dc <_ZN6LIS3DH7readAccEhh>
     46c:	90 93 a5 00 	sts	0x00A5, r25	; 0x8000a5 <oneZ+0x1>
     470:	80 93 a4 00 	sts	0x00A4, r24	; 0x8000a4 <oneZ>
		 oneY= acc.readAcc(0x2A,0x2B);
     474:	4b e2       	ldi	r20, 0x2B	; 43
     476:	6a e2       	ldi	r22, 0x2A	; 42
     478:	ce 01       	movw	r24, r28
     47a:	03 96       	adiw	r24, 0x03	; 3
     47c:	af df       	rcall	.-162    	; 0x3dc <_ZN6LIS3DH7readAccEhh>
     47e:	90 93 a7 00 	sts	0x00A7, r25	; 0x8000a7 <oneY+0x1>
     482:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <oneY>
		 oneX = acc.readAcc(0x28,0x29);
     486:	49 e2       	ldi	r20, 0x29	; 41
     488:	68 e2       	ldi	r22, 0x28	; 40
     48a:	ce 01       	movw	r24, r28
     48c:	03 96       	adiw	r24, 0x03	; 3
     48e:	a6 df       	rcall	.-180    	; 0x3dc <_ZN6LIS3DH7readAccEhh>
     490:	6c 01       	movw	r12, r24
     492:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <oneX+0x1>
     496:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <oneX>
		 sumZ+=oneZ; 
     49a:	80 90 a4 00 	lds	r8, 0x00A4	; 0x8000a4 <oneZ>
     49e:	90 90 a5 00 	lds	r9, 0x00A5	; 0x8000a5 <oneZ+0x1>
     4a2:	09 2c       	mov	r0, r9
     4a4:	00 0c       	add	r0, r0
     4a6:	aa 08       	sbc	r10, r10
     4a8:	bb 08       	sbc	r11, r11
     4aa:	80 91 aa 00 	lds	r24, 0x00AA	; 0x8000aa <sumZ>
     4ae:	90 91 ab 00 	lds	r25, 0x00AB	; 0x8000ab <sumZ+0x1>
     4b2:	a0 91 ac 00 	lds	r26, 0x00AC	; 0x8000ac <sumZ+0x2>
     4b6:	b0 91 ad 00 	lds	r27, 0x00AD	; 0x8000ad <sumZ+0x3>
     4ba:	88 0e       	add	r8, r24
     4bc:	99 1e       	adc	r9, r25
     4be:	aa 1e       	adc	r10, r26
     4c0:	bb 1e       	adc	r11, r27
     4c2:	80 92 aa 00 	sts	0x00AA, r8	; 0x8000aa <sumZ>
     4c6:	90 92 ab 00 	sts	0x00AB, r9	; 0x8000ab <sumZ+0x1>
     4ca:	a0 92 ac 00 	sts	0x00AC, r10	; 0x8000ac <sumZ+0x2>
     4ce:	b0 92 ad 00 	sts	0x00AD, r11	; 0x8000ad <sumZ+0x3>
		 sumY+=oneY; 
     4d2:	80 91 a6 00 	lds	r24, 0x00A6	; 0x8000a6 <oneY>
     4d6:	90 91 a7 00 	lds	r25, 0x00A7	; 0x8000a7 <oneY+0x1>
     4da:	09 2e       	mov	r0, r25
     4dc:	00 0c       	add	r0, r0
     4de:	aa 0b       	sbc	r26, r26
     4e0:	bb 0b       	sbc	r27, r27
     4e2:	40 91 ae 00 	lds	r20, 0x00AE	; 0x8000ae <sumY>
     4e6:	50 91 af 00 	lds	r21, 0x00AF	; 0x8000af <sumY+0x1>
     4ea:	60 91 b0 00 	lds	r22, 0x00B0	; 0x8000b0 <sumY+0x2>
     4ee:	70 91 b1 00 	lds	r23, 0x00B1	; 0x8000b1 <sumY+0x3>
     4f2:	2c 01       	movw	r4, r24
     4f4:	3d 01       	movw	r6, r26
     4f6:	44 0e       	add	r4, r20
     4f8:	55 1e       	adc	r5, r21
     4fa:	66 1e       	adc	r6, r22
     4fc:	77 1e       	adc	r7, r23
     4fe:	c3 01       	movw	r24, r6
     500:	b2 01       	movw	r22, r4
     502:	40 92 ae 00 	sts	0x00AE, r4	; 0x8000ae <sumY>
     506:	50 92 af 00 	sts	0x00AF, r5	; 0x8000af <sumY+0x1>
     50a:	60 92 b0 00 	sts	0x00B0, r6	; 0x8000b0 <sumY+0x2>
     50e:	70 92 b1 00 	sts	0x00B1, r7	; 0x8000b1 <sumY+0x3>
		 sumX+=oneX; 
     512:	0d 2c       	mov	r0, r13
     514:	00 0c       	add	r0, r0
     516:	ee 08       	sbc	r14, r14
     518:	ff 08       	sbc	r15, r15
     51a:	40 90 b2 00 	lds	r4, 0x00B2	; 0x8000b2 <sumX>
     51e:	50 90 b3 00 	lds	r5, 0x00B3	; 0x8000b3 <sumX+0x1>
     522:	60 90 b4 00 	lds	r6, 0x00B4	; 0x8000b4 <sumX+0x2>
     526:	70 90 b5 00 	lds	r7, 0x00B5	; 0x8000b5 <sumX+0x3>
     52a:	c4 0c       	add	r12, r4
     52c:	d5 1c       	adc	r13, r5
     52e:	e6 1c       	adc	r14, r6
     530:	f7 1c       	adc	r15, r7
     532:	c0 92 b2 00 	sts	0x00B2, r12	; 0x8000b2 <sumX>
     536:	d0 92 b3 00 	sts	0x00B3, r13	; 0x8000b3 <sumX+0x1>
     53a:	e0 92 b4 00 	sts	0x00B4, r14	; 0x8000b4 <sumX+0x2>
     53e:	f0 92 b5 00 	sts	0x00B5, r15	; 0x8000b5 <sumX+0x3>
		 n++;
     542:	20 91 97 00 	lds	r18, 0x0097	; 0x800097 <n>
     546:	2f 5f       	subi	r18, 0xFF	; 255
     548:	20 93 97 00 	sts	0x0097, r18	; 0x800097 <n>
		 
		 if(n==samplesToAvg-1){
     54c:	40 90 60 00 	lds	r4, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     550:	30 e0       	ldi	r19, 0x00	; 0
     552:	44 2d       	mov	r20, r4
     554:	50 e0       	ldi	r21, 0x00	; 0
     556:	41 50       	subi	r20, 0x01	; 1
     558:	51 09       	sbc	r21, r1
     55a:	24 17       	cp	r18, r20
     55c:	35 07       	cpc	r19, r21
     55e:	09 f0       	breq	.+2      	; 0x562 <__stack+0x103>
     560:	7a cf       	rjmp	.-268    	; 0x456 <main+0x46>
			//////////////////////////////////////////////////////////////////calculate average acc reading
			int16_t Xavg=sumX/samplesToAvg;
     562:	51 2c       	mov	r5, r1
     564:	61 2c       	mov	r6, r1
     566:	71 2c       	mov	r7, r1
			int16_t Yavg=sumY/samplesToAvg;
			int16_t Zavg=sumZ/samplesToAvg;
						 
			//reset values
			n=0;   
     568:	10 92 97 00 	sts	0x0097, r1	; 0x800097 <n>
			sumZ=0;           
     56c:	10 92 aa 00 	sts	0x00AA, r1	; 0x8000aa <sumZ>
     570:	10 92 ab 00 	sts	0x00AB, r1	; 0x8000ab <sumZ+0x1>
     574:	10 92 ac 00 	sts	0x00AC, r1	; 0x8000ac <sumZ+0x2>
     578:	10 92 ad 00 	sts	0x00AD, r1	; 0x8000ad <sumZ+0x3>
			sumY=0;
     57c:	10 92 ae 00 	sts	0x00AE, r1	; 0x8000ae <sumY>
     580:	10 92 af 00 	sts	0x00AF, r1	; 0x8000af <sumY+0x1>
     584:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <sumY+0x2>
     588:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <sumY+0x3>
			sumX=0;
     58c:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <sumX>
     590:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <sumX+0x1>
     594:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <sumX+0x2>
     598:	10 92 b5 00 	sts	0x00B5, r1	; 0x8000b5 <sumX+0x3>
			
			//////////////////////////////////////////////////////////////////calculate angles
			pitch= ((atan2(Xavg, sqrt(square(Yavg) + square(Zavg)))*180.0)/M_PI)+pitchOffset;
     59c:	a3 01       	movw	r20, r6
     59e:	92 01       	movw	r18, r4
     5a0:	fe d5       	rcall	.+3068   	; 0x119e <__divmodsi4>
     5a2:	b9 01       	movw	r22, r18
     5a4:	33 0f       	add	r19, r19
     5a6:	88 0b       	sbc	r24, r24
     5a8:	99 0b       	sbc	r25, r25
     5aa:	34 d4       	rcall	.+2152   	; 0xe14 <__floatsisf>
     5ac:	cf 5e       	subi	r28, 0xEF	; 239
     5ae:	dd 4f       	sbci	r29, 0xFD	; 253
     5b0:	68 83       	st	Y, r22
     5b2:	79 83       	std	Y+1, r23	; 0x01
     5b4:	8a 83       	std	Y+2, r24	; 0x02
     5b6:	9b 83       	std	Y+3, r25	; 0x03
     5b8:	c1 51       	subi	r28, 0x11	; 17
     5ba:	d2 40       	sbci	r29, 0x02	; 2
     5bc:	8e d5       	rcall	.+2844   	; 0x10da <square>
     5be:	c7 5f       	subi	r28, 0xF7	; 247
     5c0:	dd 4f       	sbci	r29, 0xFD	; 253
     5c2:	68 83       	st	Y, r22
     5c4:	79 83       	std	Y+1, r23	; 0x01
     5c6:	8a 83       	std	Y+2, r24	; 0x02
     5c8:	9b 83       	std	Y+3, r25	; 0x03
     5ca:	c9 50       	subi	r28, 0x09	; 9
     5cc:	d2 40       	sbci	r29, 0x02	; 2
     5ce:	c5 01       	movw	r24, r10
     5d0:	b4 01       	movw	r22, r8
     5d2:	a3 01       	movw	r20, r6
     5d4:	92 01       	movw	r18, r4
     5d6:	e3 d5       	rcall	.+3014   	; 0x119e <__divmodsi4>
     5d8:	b9 01       	movw	r22, r18
     5da:	33 0f       	add	r19, r19
     5dc:	88 0b       	sbc	r24, r24
     5de:	99 0b       	sbc	r25, r25
     5e0:	19 d4       	rcall	.+2098   	; 0xe14 <__floatsisf>
     5e2:	cb 5e       	subi	r28, 0xEB	; 235
     5e4:	dd 4f       	sbci	r29, 0xFD	; 253
     5e6:	68 83       	st	Y, r22
     5e8:	79 83       	std	Y+1, r23	; 0x01
     5ea:	8a 83       	std	Y+2, r24	; 0x02
     5ec:	9b 83       	std	Y+3, r25	; 0x03
     5ee:	c5 51       	subi	r28, 0x15	; 21
     5f0:	d2 40       	sbci	r29, 0x02	; 2
     5f2:	73 d5       	rcall	.+2790   	; 0x10da <square>
     5f4:	c3 5f       	subi	r28, 0xF3	; 243
     5f6:	dd 4f       	sbci	r29, 0xFD	; 253
     5f8:	68 83       	st	Y, r22
     5fa:	79 83       	std	Y+1, r23	; 0x01
     5fc:	8a 83       	std	Y+2, r24	; 0x02
     5fe:	9b 83       	std	Y+3, r25	; 0x03
     600:	cd 50       	subi	r28, 0x0D	; 13
     602:	d2 40       	sbci	r29, 0x02	; 2
     604:	c3 5f       	subi	r28, 0xF3	; 243
     606:	dd 4f       	sbci	r29, 0xFD	; 253
     608:	28 81       	ld	r18, Y
     60a:	39 81       	ldd	r19, Y+1	; 0x01
     60c:	4a 81       	ldd	r20, Y+2	; 0x02
     60e:	5b 81       	ldd	r21, Y+3	; 0x03
     610:	cd 50       	subi	r28, 0x0D	; 13
     612:	d2 40       	sbci	r29, 0x02	; 2
     614:	c7 5f       	subi	r28, 0xF7	; 247
     616:	dd 4f       	sbci	r29, 0xFD	; 253
     618:	68 81       	ld	r22, Y
     61a:	79 81       	ldd	r23, Y+1	; 0x01
     61c:	8a 81       	ldd	r24, Y+2	; 0x02
     61e:	9b 81       	ldd	r25, Y+3	; 0x03
     620:	c9 50       	subi	r28, 0x09	; 9
     622:	d2 40       	sbci	r29, 0x02	; 2
     624:	96 d2       	rcall	.+1324   	; 0xb52 <__addsf3>
     626:	1b d5       	rcall	.+2614   	; 0x105e <sqrt>
     628:	4b 01       	movw	r8, r22
     62a:	5c 01       	movw	r10, r24
     62c:	c7 01       	movw	r24, r14
     62e:	b6 01       	movw	r22, r12
     630:	a3 01       	movw	r20, r6
     632:	92 01       	movw	r18, r4
     634:	b4 d5       	rcall	.+2920   	; 0x119e <__divmodsi4>
     636:	b9 01       	movw	r22, r18
     638:	33 0f       	add	r19, r19
     63a:	88 0b       	sbc	r24, r24
     63c:	99 0b       	sbc	r25, r25
     63e:	ea d3       	rcall	.+2004   	; 0xe14 <__floatsisf>
     640:	6b 01       	movw	r12, r22
     642:	7c 01       	movw	r14, r24
     644:	a5 01       	movw	r20, r10
     646:	94 01       	movw	r18, r8
     648:	f7 d2       	rcall	.+1518   	; 0xc38 <atan2>
     64a:	20 e0       	ldi	r18, 0x00	; 0
     64c:	30 e0       	ldi	r19, 0x00	; 0
     64e:	44 e3       	ldi	r20, 0x34	; 52
     650:	53 e4       	ldi	r21, 0x43	; 67
     652:	98 d4       	rcall	.+2352   	; 0xf84 <__mulsf3>
     654:	2b ed       	ldi	r18, 0xDB	; 219
     656:	3f e0       	ldi	r19, 0x0F	; 15
     658:	49 e4       	ldi	r20, 0x49	; 73
     65a:	50 e4       	ldi	r21, 0x40	; 64
     65c:	40 d3       	rcall	.+1664   	; 0xcde <__divsf3>
     65e:	20 91 9c 00 	lds	r18, 0x009C	; 0x80009c <pitchOffset>
     662:	30 91 9d 00 	lds	r19, 0x009D	; 0x80009d <pitchOffset+0x1>
     666:	40 91 9e 00 	lds	r20, 0x009E	; 0x80009e <pitchOffset+0x2>
     66a:	50 91 9f 00 	lds	r21, 0x009F	; 0x80009f <pitchOffset+0x3>
     66e:	71 d2       	rcall	.+1250   	; 0xb52 <__addsf3>
     670:	4b 01       	movw	r8, r22
     672:	5c 01       	movw	r10, r24
     674:	60 93 be 00 	sts	0x00BE, r22	; 0x8000be <pitch>
     678:	70 93 bf 00 	sts	0x00BF, r23	; 0x8000bf <pitch+0x1>
     67c:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <pitch+0x2>
     680:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <pitch+0x3>
			roll = ((atan2(Yavg, sqrt(square(Zavg) + square(Xavg)))*180.0)/M_PI)+rollOffset;
     684:	c7 01       	movw	r24, r14
     686:	b6 01       	movw	r22, r12
     688:	28 d5       	rcall	.+2640   	; 0x10da <square>
     68a:	6b 01       	movw	r12, r22
     68c:	7c 01       	movw	r14, r24
     68e:	a7 01       	movw	r20, r14
     690:	96 01       	movw	r18, r12
     692:	c3 5f       	subi	r28, 0xF3	; 243
     694:	dd 4f       	sbci	r29, 0xFD	; 253
     696:	68 81       	ld	r22, Y
     698:	79 81       	ldd	r23, Y+1	; 0x01
     69a:	8a 81       	ldd	r24, Y+2	; 0x02
     69c:	9b 81       	ldd	r25, Y+3	; 0x03
     69e:	cd 50       	subi	r28, 0x0D	; 13
     6a0:	d2 40       	sbci	r29, 0x02	; 2
     6a2:	57 d2       	rcall	.+1198   	; 0xb52 <__addsf3>
     6a4:	dc d4       	rcall	.+2488   	; 0x105e <sqrt>
     6a6:	9b 01       	movw	r18, r22
     6a8:	ac 01       	movw	r20, r24
     6aa:	cf 5e       	subi	r28, 0xEF	; 239
     6ac:	dd 4f       	sbci	r29, 0xFD	; 253
     6ae:	68 81       	ld	r22, Y
     6b0:	79 81       	ldd	r23, Y+1	; 0x01
     6b2:	8a 81       	ldd	r24, Y+2	; 0x02
     6b4:	9b 81       	ldd	r25, Y+3	; 0x03
     6b6:	c1 51       	subi	r28, 0x11	; 17
     6b8:	d2 40       	sbci	r29, 0x02	; 2
     6ba:	be d2       	rcall	.+1404   	; 0xc38 <atan2>
     6bc:	20 e0       	ldi	r18, 0x00	; 0
     6be:	30 e0       	ldi	r19, 0x00	; 0
     6c0:	44 e3       	ldi	r20, 0x34	; 52
     6c2:	53 e4       	ldi	r21, 0x43	; 67
     6c4:	5f d4       	rcall	.+2238   	; 0xf84 <__mulsf3>
     6c6:	2b ed       	ldi	r18, 0xDB	; 219
     6c8:	3f e0       	ldi	r19, 0x0F	; 15
     6ca:	49 e4       	ldi	r20, 0x49	; 73
     6cc:	50 e4       	ldi	r21, 0x40	; 64
     6ce:	07 d3       	rcall	.+1550   	; 0xcde <__divsf3>
     6d0:	20 91 a0 00 	lds	r18, 0x00A0	; 0x8000a0 <rollOffset>
     6d4:	30 91 a1 00 	lds	r19, 0x00A1	; 0x8000a1 <rollOffset+0x1>
     6d8:	40 91 a2 00 	lds	r20, 0x00A2	; 0x8000a2 <rollOffset+0x2>
     6dc:	50 91 a3 00 	lds	r21, 0x00A3	; 0x8000a3 <rollOffset+0x3>
     6e0:	38 d2       	rcall	.+1136   	; 0xb52 <__addsf3>
     6e2:	2b 01       	movw	r4, r22
     6e4:	3c 01       	movw	r6, r24
     6e6:	60 93 ba 00 	sts	0x00BA, r22	; 0x8000ba <roll>
     6ea:	70 93 bb 00 	sts	0x00BB, r23	; 0x8000bb <roll+0x1>
     6ee:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <roll+0x2>
     6f2:	90 93 bd 00 	sts	0x00BD, r25	; 0x8000bd <roll+0x3>
			yaw = ((atan2(sqrt(square(Yavg) + square(Xavg)), Zavg)*180.0)/M_PI)+yawOffset;
     6f6:	a7 01       	movw	r20, r14
     6f8:	96 01       	movw	r18, r12
     6fa:	c7 5f       	subi	r28, 0xF7	; 247
     6fc:	dd 4f       	sbci	r29, 0xFD	; 253
     6fe:	68 81       	ld	r22, Y
     700:	79 81       	ldd	r23, Y+1	; 0x01
     702:	8a 81       	ldd	r24, Y+2	; 0x02
     704:	9b 81       	ldd	r25, Y+3	; 0x03
     706:	c9 50       	subi	r28, 0x09	; 9
     708:	d2 40       	sbci	r29, 0x02	; 2
     70a:	23 d2       	rcall	.+1094   	; 0xb52 <__addsf3>
     70c:	a8 d4       	rcall	.+2384   	; 0x105e <sqrt>
     70e:	cb 5e       	subi	r28, 0xEB	; 235
     710:	dd 4f       	sbci	r29, 0xFD	; 253
     712:	28 81       	ld	r18, Y
     714:	39 81       	ldd	r19, Y+1	; 0x01
     716:	4a 81       	ldd	r20, Y+2	; 0x02
     718:	5b 81       	ldd	r21, Y+3	; 0x03
     71a:	c5 51       	subi	r28, 0x15	; 21
     71c:	d2 40       	sbci	r29, 0x02	; 2
     71e:	8c d2       	rcall	.+1304   	; 0xc38 <atan2>
     720:	20 e0       	ldi	r18, 0x00	; 0
     722:	30 e0       	ldi	r19, 0x00	; 0
     724:	44 e3       	ldi	r20, 0x34	; 52
     726:	53 e4       	ldi	r21, 0x43	; 67
     728:	2d d4       	rcall	.+2138   	; 0xf84 <__mulsf3>
     72a:	2b ed       	ldi	r18, 0xDB	; 219
     72c:	3f e0       	ldi	r19, 0x0F	; 15
     72e:	49 e4       	ldi	r20, 0x49	; 73
     730:	50 e4       	ldi	r21, 0x40	; 64
     732:	d5 d2       	rcall	.+1450   	; 0xcde <__divsf3>
     734:	20 91 98 00 	lds	r18, 0x0098	; 0x800098 <yawOffset>
     738:	30 91 99 00 	lds	r19, 0x0099	; 0x800099 <yawOffset+0x1>
     73c:	40 91 9a 00 	lds	r20, 0x009A	; 0x80009a <yawOffset+0x2>
     740:	50 91 9b 00 	lds	r21, 0x009B	; 0x80009b <yawOffset+0x3>
     744:	06 d2       	rcall	.+1036   	; 0xb52 <__addsf3>
     746:	6b 01       	movw	r12, r22
     748:	7c 01       	movw	r14, r24
     74a:	60 93 b6 00 	sts	0x00B6, r22	; 0x8000b6 <yaw>
     74e:	70 93 b7 00 	sts	0x00B7, r23	; 0x8000b7 <yaw+0x1>
     752:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <yaw+0x2>
     756:	90 93 b9 00 	sts	0x00B9, r25	; 0x8000b9 <yaw+0x3>
			//////////////////////////////////////////////////////////////////change display mode depending on device orientation
			if(abs(roll)>70){
     75a:	c3 01       	movw	r24, r6
     75c:	b2 01       	movw	r22, r4
     75e:	27 d3       	rcall	.+1614   	; 0xdae <__fixsfsi>
     760:	2b 01       	movw	r4, r22
     762:	3c 01       	movw	r6, r24
     764:	cb 01       	movw	r24, r22
     766:	55 20       	and	r5, r5
     768:	24 f4       	brge	.+8      	; 0x772 <__stack+0x313>
     76a:	88 27       	eor	r24, r24
     76c:	99 27       	eor	r25, r25
     76e:	84 19       	sub	r24, r4
     770:	95 09       	sbc	r25, r5
     772:	87 34       	cpi	r24, 0x47	; 71
     774:	91 05       	cpc	r25, r1
     776:	14 f0       	brlt	.+4      	; 0x77c <__stack+0x31d>
				measurementMode=1;
     778:	10 93 96 00 	sts	0x0096, r17	; 0x800096 <__data_end>
			}
			if(abs(roll)<40){
     77c:	c2 01       	movw	r24, r4
     77e:	87 96       	adiw	r24, 0x27	; 39
     780:	8f 34       	cpi	r24, 0x4F	; 79
     782:	91 05       	cpc	r25, r1
     784:	10 f4       	brcc	.+4      	; 0x78a <__stack+0x32b>
				measurementMode=0;
     786:	10 92 96 00 	sts	0x0096, r1	; 0x800096 <__data_end>
			}
			
			//////////////////////////////////////////////////////////////////WRITE VALUES TO UART
			USART_WriteDebug(pitch,roll,yaw,measurementMode);
     78a:	c7 01       	movw	r24, r14
     78c:	b6 01       	movw	r22, r12
     78e:	0f d3       	rcall	.+1566   	; 0xdae <__fixsfsi>
     790:	6b 01       	movw	r12, r22
     792:	7c 01       	movw	r14, r24
     794:	c5 01       	movw	r24, r10
     796:	b4 01       	movw	r22, r8
     798:	0a d3       	rcall	.+1556   	; 0xdae <__fixsfsi>
     79a:	dc 01       	movw	r26, r24
     79c:	cb 01       	movw	r24, r22
     79e:	20 91 96 00 	lds	r18, 0x0096	; 0x800096 <__data_end>
     7a2:	a6 01       	movw	r20, r12
     7a4:	b2 01       	movw	r22, r4
     7a6:	2e d1       	rcall	.+604    	; 0xa04 <_Z16USART_WriteDebugiiih>
			
			//////////////////////////////////////////////////////////////////DRAW LEFT HALF OF SCREEN
			fb.clear();
     7a8:	ce 01       	movw	r24, r28
     7aa:	07 96       	adiw	r24, 0x07	; 7
     7ac:	75 dd       	rcall	.-1302   	; 0x298 <_ZN11Framebuffer5clearEv>
			//fb.drawRectangle(32-5,32-5,32+5,32+5,0);
			//fb.drawHLine(32,22,10);
			//fb.drawVLine(32,22,10);
			fb.drawRectangle(28,28,36,36);
     7ae:	04 e2       	ldi	r16, 0x24	; 36
     7b0:	24 e2       	ldi	r18, 0x24	; 36
     7b2:	4c e1       	ldi	r20, 0x1C	; 28
     7b4:	6c e1       	ldi	r22, 0x1C	; 28
     7b6:	ce 01       	movw	r24, r28
     7b8:	07 96       	adiw	r24, 0x07	; 7
     7ba:	43 dd       	rcall	.-1402   	; 0x242 <_ZN11Framebuffer13drawRectangleEhhhh>
			fb.drawPixel((int8_t)(sin(pitch*M_PI/180)*32)+32,(sin(roll*M_PI/180)*32)+32);
     7bc:	2b ed       	ldi	r18, 0xDB	; 219
     7be:	3f e0       	ldi	r19, 0x0F	; 15
     7c0:	49 e4       	ldi	r20, 0x49	; 73
     7c2:	50 e4       	ldi	r21, 0x40	; 64
     7c4:	60 91 ba 00 	lds	r22, 0x00BA	; 0x8000ba <roll>
     7c8:	70 91 bb 00 	lds	r23, 0x00BB	; 0x8000bb <roll+0x1>
     7cc:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <roll+0x2>
     7d0:	90 91 bd 00 	lds	r25, 0x00BD	; 0x8000bd <roll+0x3>
     7d4:	d7 d3       	rcall	.+1966   	; 0xf84 <__mulsf3>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	44 e3       	ldi	r20, 0x34	; 52
     7dc:	53 e4       	ldi	r21, 0x43	; 67
     7de:	7f d2       	rcall	.+1278   	; 0xcde <__divsf3>
     7e0:	34 d4       	rcall	.+2152   	; 0x104a <sin>
     7e2:	6b 01       	movw	r12, r22
     7e4:	7c 01       	movw	r14, r24
     7e6:	2b ed       	ldi	r18, 0xDB	; 219
     7e8:	3f e0       	ldi	r19, 0x0F	; 15
     7ea:	49 e4       	ldi	r20, 0x49	; 73
     7ec:	50 e4       	ldi	r21, 0x40	; 64
     7ee:	60 91 be 00 	lds	r22, 0x00BE	; 0x8000be <pitch>
     7f2:	70 91 bf 00 	lds	r23, 0x00BF	; 0x8000bf <pitch+0x1>
     7f6:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <pitch+0x2>
     7fa:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <pitch+0x3>
     7fe:	c2 d3       	rcall	.+1924   	; 0xf84 <__mulsf3>
     800:	20 e0       	ldi	r18, 0x00	; 0
     802:	30 e0       	ldi	r19, 0x00	; 0
     804:	44 e3       	ldi	r20, 0x34	; 52
     806:	53 e4       	ldi	r21, 0x43	; 67
     808:	6a d2       	rcall	.+1236   	; 0xcde <__divsf3>
     80a:	1f d4       	rcall	.+2110   	; 0x104a <sin>
     80c:	4b 01       	movw	r8, r22
     80e:	5c 01       	movw	r10, r24
     810:	20 e0       	ldi	r18, 0x00	; 0
     812:	30 e0       	ldi	r19, 0x00	; 0
     814:	40 e0       	ldi	r20, 0x00	; 0
     816:	52 e4       	ldi	r21, 0x42	; 66
     818:	c7 01       	movw	r24, r14
     81a:	b6 01       	movw	r22, r12
     81c:	b3 d3       	rcall	.+1894   	; 0xf84 <__mulsf3>
     81e:	20 e0       	ldi	r18, 0x00	; 0
     820:	30 e0       	ldi	r19, 0x00	; 0
     822:	40 e0       	ldi	r20, 0x00	; 0
     824:	52 e4       	ldi	r21, 0x42	; 66
     826:	95 d1       	rcall	.+810    	; 0xb52 <__addsf3>
     828:	c7 d2       	rcall	.+1422   	; 0xdb8 <__fixunssfsi>
     82a:	f6 2e       	mov	r15, r22
     82c:	20 e0       	ldi	r18, 0x00	; 0
     82e:	30 e0       	ldi	r19, 0x00	; 0
     830:	40 e0       	ldi	r20, 0x00	; 0
     832:	52 e4       	ldi	r21, 0x42	; 66
     834:	c5 01       	movw	r24, r10
     836:	b4 01       	movw	r22, r8
     838:	a5 d3       	rcall	.+1866   	; 0xf84 <__mulsf3>
     83a:	b9 d2       	rcall	.+1394   	; 0xdae <__fixsfsi>
     83c:	60 5e       	subi	r22, 0xE0	; 224
     83e:	4f 2d       	mov	r20, r15
     840:	ce 01       	movw	r24, r28
     842:	07 96       	adiw	r24, 0x07	; 7
     844:	af dc       	rcall	.-1698   	; 0x1a4 <_ZN11Framebuffer9drawPixelEhh>
			fb.show(0);
     846:	60 e0       	ldi	r22, 0x00	; 0
     848:	ce 01       	movw	r24, r28
     84a:	07 96       	adiw	r24, 0x07	; 7
     84c:	36 dd       	rcall	.-1428   	; 0x2ba <_ZN11Framebuffer4showEh>
		 
			//////////////////////////////////////////////////////////////////DRAW RIGHT HALF OF SCREEN	
			fb.clear();
     84e:	ce 01       	movw	r24, r28
     850:	07 96       	adiw	r24, 0x07	; 7
     852:	22 dd       	rcall	.-1468   	; 0x298 <_ZN11Framebuffer5clearEv>
			fb.show(1);
     854:	61 2f       	mov	r22, r17
     856:	ce 01       	movw	r24, r28
     858:	07 96       	adiw	r24, 0x07	; 7
     85a:	2f dd       	rcall	.-1442   	; 0x2ba <_ZN11Framebuffer4showEh>
     85c:	fc cd       	rjmp	.-1032   	; 0x456 <main+0x46>

0000085e <_ZN7SSD130611sendCommandEh>:

void SSD1306::setContrast(uint8_t contrast){
	if(contrast>255)contrast=255;
	sendCommand(SSD1306_SETCONTRAST);
	sendCommand(contrast);
}
     85e:	1f 93       	push	r17
     860:	cf 93       	push	r28
     862:	df 93       	push	r29
     864:	ec 01       	movw	r28, r24
     866:	16 2f       	mov	r17, r22
     868:	34 dd       	rcall	.-1432   	; 0x2d2 <_ZN3I2C5startEv>
     86a:	60 e0       	ldi	r22, 0x00	; 0
     86c:	ce 01       	movw	r24, r28
     86e:	53 dd       	rcall	.-1370   	; 0x316 <_ZN3I2C5writeEh>
     870:	61 2f       	mov	r22, r17
     872:	ce 01       	movw	r24, r28
     874:	50 dd       	rcall	.-1376   	; 0x316 <_ZN3I2C5writeEh>
     876:	ce 01       	movw	r24, r28
     878:	5d dd       	rcall	.-1350   	; 0x334 <_ZN3I2C4stopEv>
     87a:	df 91       	pop	r29
     87c:	cf 91       	pop	r28
     87e:	1f 91       	pop	r17
     880:	08 95       	ret

00000882 <_ZN7SSD1306C1Ev>:
     882:	cf 93       	push	r28
     884:	df 93       	push	r29
     886:	ec 01       	movw	r28, r24
     888:	1d dd       	rcall	.-1478   	; 0x2c4 <_ZN3I2CC1Ev>
     88a:	68 e7       	ldi	r22, 0x78	; 120
     88c:	ce 01       	movw	r24, r28
     88e:	1b dd       	rcall	.-1482   	; 0x2c6 <_ZN3I2C4initEh>
     890:	6e ea       	ldi	r22, 0xAE	; 174
     892:	ce 01       	movw	r24, r28
     894:	e4 df       	rcall	.-56     	; 0x85e <_ZN7SSD130611sendCommandEh>
     896:	65 ed       	ldi	r22, 0xD5	; 213
     898:	ce 01       	movw	r24, r28
     89a:	e1 df       	rcall	.-62     	; 0x85e <_ZN7SSD130611sendCommandEh>
     89c:	60 e8       	ldi	r22, 0x80	; 128
     89e:	ce 01       	movw	r24, r28
     8a0:	de df       	rcall	.-68     	; 0x85e <_ZN7SSD130611sendCommandEh>
     8a2:	68 ea       	ldi	r22, 0xA8	; 168
     8a4:	ce 01       	movw	r24, r28
     8a6:	db df       	rcall	.-74     	; 0x85e <_ZN7SSD130611sendCommandEh>
     8a8:	6f e3       	ldi	r22, 0x3F	; 63
     8aa:	ce 01       	movw	r24, r28
     8ac:	d8 df       	rcall	.-80     	; 0x85e <_ZN7SSD130611sendCommandEh>
     8ae:	63 ed       	ldi	r22, 0xD3	; 211
     8b0:	ce 01       	movw	r24, r28
     8b2:	d5 df       	rcall	.-86     	; 0x85e <_ZN7SSD130611sendCommandEh>
     8b4:	60 e0       	ldi	r22, 0x00	; 0
     8b6:	ce 01       	movw	r24, r28
     8b8:	d2 df       	rcall	.-92     	; 0x85e <_ZN7SSD130611sendCommandEh>
     8ba:	60 e4       	ldi	r22, 0x40	; 64
     8bc:	ce 01       	movw	r24, r28
     8be:	cf df       	rcall	.-98     	; 0x85e <_ZN7SSD130611sendCommandEh>
     8c0:	6d e8       	ldi	r22, 0x8D	; 141
     8c2:	ce 01       	movw	r24, r28
     8c4:	cc df       	rcall	.-104    	; 0x85e <_ZN7SSD130611sendCommandEh>
     8c6:	64 e1       	ldi	r22, 0x14	; 20
     8c8:	ce 01       	movw	r24, r28
     8ca:	c9 df       	rcall	.-110    	; 0x85e <_ZN7SSD130611sendCommandEh>
     8cc:	60 e2       	ldi	r22, 0x20	; 32
     8ce:	ce 01       	movw	r24, r28
     8d0:	c6 df       	rcall	.-116    	; 0x85e <_ZN7SSD130611sendCommandEh>
     8d2:	60 e0       	ldi	r22, 0x00	; 0
     8d4:	ce 01       	movw	r24, r28
     8d6:	c3 df       	rcall	.-122    	; 0x85e <_ZN7SSD130611sendCommandEh>
     8d8:	61 ea       	ldi	r22, 0xA1	; 161
     8da:	ce 01       	movw	r24, r28
     8dc:	c0 df       	rcall	.-128    	; 0x85e <_ZN7SSD130611sendCommandEh>
     8de:	68 ec       	ldi	r22, 0xC8	; 200
     8e0:	ce 01       	movw	r24, r28
     8e2:	bd df       	rcall	.-134    	; 0x85e <_ZN7SSD130611sendCommandEh>
     8e4:	6a ed       	ldi	r22, 0xDA	; 218
     8e6:	ce 01       	movw	r24, r28
     8e8:	ba df       	rcall	.-140    	; 0x85e <_ZN7SSD130611sendCommandEh>
     8ea:	62 e1       	ldi	r22, 0x12	; 18
     8ec:	ce 01       	movw	r24, r28
     8ee:	b7 df       	rcall	.-146    	; 0x85e <_ZN7SSD130611sendCommandEh>
     8f0:	61 e8       	ldi	r22, 0x81	; 129
     8f2:	ce 01       	movw	r24, r28
     8f4:	b4 df       	rcall	.-152    	; 0x85e <_ZN7SSD130611sendCommandEh>
     8f6:	6f ec       	ldi	r22, 0xCF	; 207
     8f8:	ce 01       	movw	r24, r28
     8fa:	b1 df       	rcall	.-158    	; 0x85e <_ZN7SSD130611sendCommandEh>
     8fc:	69 ed       	ldi	r22, 0xD9	; 217
     8fe:	ce 01       	movw	r24, r28
     900:	ae df       	rcall	.-164    	; 0x85e <_ZN7SSD130611sendCommandEh>
     902:	61 ef       	ldi	r22, 0xF1	; 241
     904:	ce 01       	movw	r24, r28
     906:	ab df       	rcall	.-170    	; 0x85e <_ZN7SSD130611sendCommandEh>
     908:	6b ed       	ldi	r22, 0xDB	; 219
     90a:	ce 01       	movw	r24, r28
     90c:	a8 df       	rcall	.-176    	; 0x85e <_ZN7SSD130611sendCommandEh>
     90e:	60 e4       	ldi	r22, 0x40	; 64
     910:	ce 01       	movw	r24, r28
     912:	a5 df       	rcall	.-182    	; 0x85e <_ZN7SSD130611sendCommandEh>
     914:	64 ea       	ldi	r22, 0xA4	; 164
     916:	ce 01       	movw	r24, r28
     918:	a2 df       	rcall	.-188    	; 0x85e <_ZN7SSD130611sendCommandEh>
     91a:	66 ea       	ldi	r22, 0xA6	; 166
     91c:	ce 01       	movw	r24, r28
     91e:	9f df       	rcall	.-194    	; 0x85e <_ZN7SSD130611sendCommandEh>
     920:	6f ea       	ldi	r22, 0xAF	; 175
     922:	ce 01       	movw	r24, r28
     924:	9c df       	rcall	.-200    	; 0x85e <_ZN7SSD130611sendCommandEh>
     926:	df 91       	pop	r29
     928:	cf 91       	pop	r28
     92a:	08 95       	ret

0000092c <_ZN7SSD130615sendFramebufferEPhh>:

void SSD1306::sendFramebuffer(uint8_t *buffer, uint8_t rightHalf) {
     92c:	cf 92       	push	r12
     92e:	df 92       	push	r13
     930:	ef 92       	push	r14
     932:	ff 92       	push	r15
     934:	0f 93       	push	r16
     936:	1f 93       	push	r17
     938:	cf 93       	push	r28
     93a:	df 93       	push	r29
     93c:	08 2f       	mov	r16, r24
     93e:	19 2f       	mov	r17, r25
     940:	7b 01       	movw	r14, r22
     942:	c4 2f       	mov	r28, r20
	sendCommand(SSD1306_COLUMNADDR);
     944:	61 e2       	ldi	r22, 0x21	; 33
     946:	8b df       	rcall	.-234    	; 0x85e <_ZN7SSD130611sendCommandEh>
	if(rightHalf){
     948:	cc 23       	and	r28, r28
     94a:	49 f0       	breq	.+18     	; 0x95e <_ZN7SSD130615sendFramebufferEPhh+0x32>
	sendCommand(0x40);
     94c:	60 e4       	ldi	r22, 0x40	; 64
     94e:	80 2f       	mov	r24, r16
     950:	91 2f       	mov	r25, r17
     952:	85 df       	rcall	.-246    	; 0x85e <_ZN7SSD130611sendCommandEh>
	sendCommand(0x7F);
     954:	6f e7       	ldi	r22, 0x7F	; 127
     956:	80 2f       	mov	r24, r16
     958:	91 2f       	mov	r25, r17
     95a:	81 df       	rcall	.-254    	; 0x85e <_ZN7SSD130611sendCommandEh>
     95c:	08 c0       	rjmp	.+16     	; 0x96e <_ZN7SSD130615sendFramebufferEPhh+0x42>
	}
	else{
	sendCommand(0x00);
     95e:	60 e0       	ldi	r22, 0x00	; 0
     960:	80 2f       	mov	r24, r16
     962:	91 2f       	mov	r25, r17
     964:	7c df       	rcall	.-264    	; 0x85e <_ZN7SSD130611sendCommandEh>
	sendCommand(0x3F);
     966:	6f e3       	ldi	r22, 0x3F	; 63
     968:	80 2f       	mov	r24, r16
     96a:	91 2f       	mov	r25, r17
     96c:	78 df       	rcall	.-272    	; 0x85e <_ZN7SSD130611sendCommandEh>
	}
	
	sendCommand(SSD1306_PAGEADDR);
     96e:	62 e2       	ldi	r22, 0x22	; 34
     970:	80 2f       	mov	r24, r16
     972:	91 2f       	mov	r25, r17
     974:	74 df       	rcall	.-280    	; 0x85e <_ZN7SSD130611sendCommandEh>
	sendCommand(0x00);
     976:	60 e0       	ldi	r22, 0x00	; 0
     978:	80 2f       	mov	r24, r16
     97a:	91 2f       	mov	r25, r17
     97c:	70 df       	rcall	.-288    	; 0x85e <_ZN7SSD130611sendCommandEh>
	sendCommand(0x07);
     97e:	67 e0       	ldi	r22, 0x07	; 7
     980:	80 2f       	mov	r24, r16
     982:	91 2f       	mov	r25, r17
     984:	6c df       	rcall	.-296    	; 0x85e <_ZN7SSD130611sendCommandEh>
     986:	e7 01       	movw	r28, r14
     988:	8e ef       	ldi	r24, 0xFE	; 254
     98a:	f8 1a       	sub	r15, r24

	// We have to send the buffer as 16 bytes packets
	// Our buffer is 512 bytes long for half a screen, 512/16 = 32
	// We have to send 64 packets
	for (uint8_t packet = 0; packet < 32; packet++) {
		i2c.start();
     98c:	80 2f       	mov	r24, r16
     98e:	91 2f       	mov	r25, r17
     990:	a0 dc       	rcall	.-1728   	; 0x2d2 <_ZN3I2C5startEv>
		i2c.write(0x40);
     992:	60 e4       	ldi	r22, 0x40	; 64
     994:	80 2f       	mov	r24, r16
     996:	91 2f       	mov	r25, r17
     998:	be dc       	rcall	.-1668   	; 0x316 <_ZN3I2C5writeEh>
     99a:	6e 01       	movw	r12, r28
     99c:	80 e1       	ldi	r24, 0x10	; 16
     99e:	c8 0e       	add	r12, r24
     9a0:	d1 1c       	adc	r13, r1
		for (uint8_t packet_byte = 0; packet_byte < 16; ++packet_byte) {
			i2c.write(buffer[packet*16+packet_byte]);
     9a2:	69 91       	ld	r22, Y+
     9a4:	80 2f       	mov	r24, r16
     9a6:	91 2f       	mov	r25, r17
     9a8:	b6 dc       	rcall	.-1684   	; 0x316 <_ZN3I2C5writeEh>
	// Our buffer is 512 bytes long for half a screen, 512/16 = 32
	// We have to send 64 packets
	for (uint8_t packet = 0; packet < 32; packet++) {
		i2c.start();
		i2c.write(0x40);
		for (uint8_t packet_byte = 0; packet_byte < 16; ++packet_byte) {
     9aa:	cc 15       	cp	r28, r12
     9ac:	dd 05       	cpc	r29, r13
     9ae:	c9 f7       	brne	.-14     	; 0x9a2 <_ZN7SSD130615sendFramebufferEPhh+0x76>
			i2c.write(buffer[packet*16+packet_byte]);
		}
		i2c.stop();
     9b0:	80 2f       	mov	r24, r16
     9b2:	91 2f       	mov	r25, r17
     9b4:	bf dc       	rcall	.-1666   	; 0x334 <_ZN3I2C4stopEv>
     9b6:	e6 01       	movw	r28, r12
	sendCommand(0x07);

	// We have to send the buffer as 16 bytes packets
	// Our buffer is 512 bytes long for half a screen, 512/16 = 32
	// We have to send 64 packets
	for (uint8_t packet = 0; packet < 32; packet++) {
     9b8:	ec 14       	cp	r14, r12
     9ba:	fd 04       	cpc	r15, r13
     9bc:	39 f7       	brne	.-50     	; 0x98c <_ZN7SSD130615sendFramebufferEPhh+0x60>
		}
		i2c.stop();
	}
	

     9be:	df 91       	pop	r29
     9c0:	cf 91       	pop	r28
     9c2:	1f 91       	pop	r17
     9c4:	0f 91       	pop	r16
     9c6:	ff 90       	pop	r15
     9c8:	ef 90       	pop	r14
     9ca:	df 90       	pop	r13
     9cc:	cf 90       	pop	r12
     9ce:	08 95       	ret

000009d0 <_Z14USART_Transmith>:

	
void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSRA & (1<<UDRE)));
     9d0:	5d 9b       	sbis	0x0b, 5	; 11
     9d2:	fe cf       	rjmp	.-4      	; 0x9d0 <_Z14USART_Transmith>
	/* Copy 9th bit to TXB8 */
	UCSRB &= ~(1<<TXB8);
     9d4:	50 98       	cbi	0x0a, 0	; 10
	if ( data & 0x0100 )
	UCSRB |= (1<<TXB8);
	/* Put data into buffer, sends the data */
	UDR= data;
     9d6:	8c b9       	out	0x0c, r24	; 12
     9d8:	08 95       	ret

000009da <_Z10USART_Initi>:
}

void USART_Init(int baud_const){
	//int UART_CONST=F_CPU/(16ul*baud)-1;
	int UART_CONST=baud_const; 
	UBRRH = (unsigned char)(UART_CONST>>8);
     9da:	90 bd       	out	0x20, r25	; 32
	UBRRL = (unsigned char)UART_CONST;
     9dc:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSRB = (1<<RXCIE)|(1<<RXEN)|(1<<TXEN);
     9de:	88 e9       	ldi	r24, 0x98	; 152
     9e0:	8a b9       	out	0x0a, r24	; 10
	
	UCSRC = 1<<URSEL | 1<<UCSZ1 | 1<<UCSZ0;         //ramka 8bit, 1 bit stopu
     9e2:	86 e8       	ldi	r24, 0x86	; 134
     9e4:	80 bd       	out	0x20, r24	; 32
     9e6:	08 95       	ret

000009e8 <_Z12USART_StringPc>:
	
}

void USART_String(char s[]){
     9e8:	cf 93       	push	r28
     9ea:	df 93       	push	r29
     9ec:	ec 01       	movw	r28, r24
	int i =0;

	while (s[i] != 0x00)
     9ee:	88 81       	ld	r24, Y
     9f0:	88 23       	and	r24, r24
     9f2:	29 f0       	breq	.+10     	; 0x9fe <_Z12USART_StringPc+0x16>
     9f4:	21 96       	adiw	r28, 0x01	; 1
	{
		USART_Transmit(s[i]);
     9f6:	ec df       	rcall	.-40     	; 0x9d0 <_Z14USART_Transmith>
}

void USART_String(char s[]){
	int i =0;

	while (s[i] != 0x00)
     9f8:	89 91       	ld	r24, Y+
     9fa:	81 11       	cpse	r24, r1
     9fc:	fc cf       	rjmp	.-8      	; 0x9f6 <_Z12USART_StringPc+0xe>
	{
		USART_Transmit(s[i]);
		i++;
	}
}
     9fe:	df 91       	pop	r29
     a00:	cf 91       	pop	r28
     a02:	08 95       	ret

00000a04 <_Z16USART_WriteDebugiiih>:

void USART_WriteDebug(int16_t pitch,int16_t roll, int16_t yaw, uint8_t measurementMode){
     a04:	8f 92       	push	r8
     a06:	9f 92       	push	r9
     a08:	bf 92       	push	r11
     a0a:	cf 92       	push	r12
     a0c:	df 92       	push	r13
     a0e:	ef 92       	push	r14
     a10:	ff 92       	push	r15
     a12:	0f 93       	push	r16
     a14:	1f 93       	push	r17
     a16:	cf 93       	push	r28
     a18:	df 93       	push	r29
     a1a:	cd b7       	in	r28, 0x3d	; 61
     a1c:	de b7       	in	r29, 0x3e	; 62
     a1e:	ea 97       	sbiw	r28, 0x3a	; 58
     a20:	0f b6       	in	r0, 0x3f	; 63
     a22:	f8 94       	cli
     a24:	de bf       	out	0x3e, r29	; 62
     a26:	0f be       	out	0x3f, r0	; 63
     a28:	cd bf       	out	0x3d, r28	; 61
     a2a:	4b 01       	movw	r8, r22
     a2c:	6a 01       	movw	r12, r20
     a2e:	b2 2e       	mov	r11, r18
	char UartString[40]={"pitch "};
     a30:	27 e0       	ldi	r18, 0x07	; 7
     a32:	e1 e6       	ldi	r30, 0x61	; 97
     a34:	f0 e0       	ldi	r31, 0x00	; 0
     a36:	ae 01       	movw	r20, r28
     a38:	4f 5f       	subi	r20, 0xFF	; 255
     a3a:	5f 4f       	sbci	r21, 0xFF	; 255
     a3c:	7a 01       	movw	r14, r20
     a3e:	da 01       	movw	r26, r20
     a40:	01 90       	ld	r0, Z+
     a42:	0d 92       	st	X+, r0
     a44:	2a 95       	dec	r18
     a46:	e1 f7       	brne	.-8      	; 0xa40 <_Z16USART_WriteDebugiiih+0x3c>
     a48:	fe 01       	movw	r30, r28
     a4a:	38 96       	adiw	r30, 0x08	; 8
     a4c:	21 e2       	ldi	r18, 0x21	; 33
     a4e:	df 01       	movw	r26, r30
     a50:	1d 92       	st	X+, r1
     a52:	2a 95       	dec	r18
     a54:	e9 f7       	brne	.-6      	; 0xa50 <_Z16USART_WriteDebugiiih+0x4c>
	char pitchString [6];
	char* pPitchString= pitchString;
	dtostrf(pitch,3,1,pPitchString);
     a56:	bc 01       	movw	r22, r24
     a58:	99 0f       	add	r25, r25
     a5a:	88 0b       	sbc	r24, r24
     a5c:	99 0b       	sbc	r25, r25
     a5e:	da d1       	rcall	.+948    	; 0xe14 <__floatsisf>
     a60:	8e 01       	movw	r16, r28
     a62:	07 5d       	subi	r16, 0xD7	; 215
     a64:	1f 4f       	sbci	r17, 0xFF	; 255
     a66:	21 e0       	ldi	r18, 0x01	; 1
     a68:	43 e0       	ldi	r20, 0x03	; 3
     a6a:	d7 d3       	rcall	.+1966   	; 0x121a <dtostrf>
	strcat(UartString,pPitchString);
     a6c:	b8 01       	movw	r22, r16
     a6e:	c7 01       	movw	r24, r14
     a70:	f3 d3       	rcall	.+2022   	; 0x1258 <strcat>
	
	strcat(UartString," roll ");
     a72:	d7 01       	movw	r26, r14
     a74:	0d 90       	ld	r0, X+
     a76:	00 20       	and	r0, r0
     a78:	e9 f7       	brne	.-6      	; 0xa74 <_Z16USART_WriteDebugiiih+0x70>
     a7a:	11 97       	sbiw	r26, 0x01	; 1
     a7c:	87 e0       	ldi	r24, 0x07	; 7
     a7e:	e9 e8       	ldi	r30, 0x89	; 137
     a80:	f0 e0       	ldi	r31, 0x00	; 0
     a82:	01 90       	ld	r0, Z+
     a84:	0d 92       	st	X+, r0
     a86:	8a 95       	dec	r24
     a88:	e1 f7       	brne	.-8      	; 0xa82 <_Z16USART_WriteDebugiiih+0x7e>
	char rollString [6];
	char* pRollString= rollString;
	dtostrf(roll,3,1,pRollString);
     a8a:	b4 01       	movw	r22, r8
     a8c:	99 0c       	add	r9, r9
     a8e:	88 0b       	sbc	r24, r24
     a90:	99 0b       	sbc	r25, r25
     a92:	c0 d1       	rcall	.+896    	; 0xe14 <__floatsisf>
     a94:	0a 5f       	subi	r16, 0xFA	; 250
     a96:	1f 4f       	sbci	r17, 0xFF	; 255
     a98:	21 e0       	ldi	r18, 0x01	; 1
     a9a:	43 e0       	ldi	r20, 0x03	; 3
     a9c:	be d3       	rcall	.+1916   	; 0x121a <dtostrf>
	strcat(UartString,pRollString);
     a9e:	b8 01       	movw	r22, r16
     aa0:	c7 01       	movw	r24, r14
     aa2:	da d3       	rcall	.+1972   	; 0x1258 <strcat>
	
	strcat(UartString," yaw ");
     aa4:	d7 01       	movw	r26, r14
     aa6:	0d 90       	ld	r0, X+
     aa8:	00 20       	and	r0, r0
     aaa:	e9 f7       	brne	.-6      	; 0xaa6 <_Z16USART_WriteDebugiiih+0xa2>
     aac:	11 97       	sbiw	r26, 0x01	; 1
     aae:	86 e0       	ldi	r24, 0x06	; 6
     ab0:	e0 e9       	ldi	r30, 0x90	; 144
     ab2:	f0 e0       	ldi	r31, 0x00	; 0
     ab4:	01 90       	ld	r0, Z+
     ab6:	0d 92       	st	X+, r0
     ab8:	8a 95       	dec	r24
     aba:	e1 f7       	brne	.-8      	; 0xab4 <_Z16USART_WriteDebugiiih+0xb0>
	char yawString [6];
	char* pYawString= yawString;
	dtostrf(yaw,3,1,pYawString);
     abc:	b6 01       	movw	r22, r12
     abe:	dd 0c       	add	r13, r13
     ac0:	88 0b       	sbc	r24, r24
     ac2:	99 0b       	sbc	r25, r25
     ac4:	a7 d1       	rcall	.+846    	; 0xe14 <__floatsisf>
     ac6:	0a 5f       	subi	r16, 0xFA	; 250
     ac8:	1f 4f       	sbci	r17, 0xFF	; 255
     aca:	21 e0       	ldi	r18, 0x01	; 1
     acc:	43 e0       	ldi	r20, 0x03	; 3
     ace:	a5 d3       	rcall	.+1866   	; 0x121a <dtostrf>
	strcat(UartString,pYawString);
     ad0:	b8 01       	movw	r22, r16
     ad2:	c7 01       	movw	r24, r14
     ad4:	c1 d3       	rcall	.+1922   	; 0x1258 <strcat>
	
	if(!measurementMode){strcat(UartString," H ");}else{strcat(UartString," V ");} //device orientation
     ad6:	b1 10       	cpse	r11, r1
     ad8:	0e c0       	rjmp	.+28     	; 0xaf6 <_Z16USART_WriteDebugiiih+0xf2>
     ada:	f7 01       	movw	r30, r14
     adc:	01 90       	ld	r0, Z+
     ade:	00 20       	and	r0, r0
     ae0:	e9 f7       	brne	.-6      	; 0xadc <_Z16USART_WriteDebugiiih+0xd8>
     ae2:	31 97       	sbiw	r30, 0x01	; 1
     ae4:	80 e2       	ldi	r24, 0x20	; 32
     ae6:	98 e4       	ldi	r25, 0x48	; 72
     ae8:	91 83       	std	Z+1, r25	; 0x01
     aea:	80 83       	st	Z, r24
     aec:	80 e2       	ldi	r24, 0x20	; 32
     aee:	90 e0       	ldi	r25, 0x00	; 0
     af0:	93 83       	std	Z+3, r25	; 0x03
     af2:	82 83       	std	Z+2, r24	; 0x02
     af4:	0e c0       	rjmp	.+28     	; 0xb12 <_Z16USART_WriteDebugiiih+0x10e>
     af6:	fe 01       	movw	r30, r28
     af8:	31 96       	adiw	r30, 0x01	; 1
     afa:	01 90       	ld	r0, Z+
     afc:	00 20       	and	r0, r0
     afe:	e9 f7       	brne	.-6      	; 0xafa <_Z16USART_WriteDebugiiih+0xf6>
     b00:	31 97       	sbiw	r30, 0x01	; 1
     b02:	80 e2       	ldi	r24, 0x20	; 32
     b04:	96 e5       	ldi	r25, 0x56	; 86
     b06:	91 83       	std	Z+1, r25	; 0x01
     b08:	80 83       	st	Z, r24
     b0a:	80 e2       	ldi	r24, 0x20	; 32
     b0c:	90 e0       	ldi	r25, 0x00	; 0
     b0e:	93 83       	std	Z+3, r25	; 0x03
     b10:	82 83       	std	Z+2, r24	; 0x02
	
	strcat(UartString,"\r\n");
     b12:	ce 01       	movw	r24, r28
     b14:	01 96       	adiw	r24, 0x01	; 1
     b16:	fc 01       	movw	r30, r24
     b18:	01 90       	ld	r0, Z+
     b1a:	00 20       	and	r0, r0
     b1c:	e9 f7       	brne	.-6      	; 0xb18 <_Z16USART_WriteDebugiiih+0x114>
     b1e:	31 97       	sbiw	r30, 0x01	; 1
     b20:	2d e0       	ldi	r18, 0x0D	; 13
     b22:	3a e0       	ldi	r19, 0x0A	; 10
     b24:	31 83       	std	Z+1, r19	; 0x01
     b26:	20 83       	st	Z, r18
     b28:	12 82       	std	Z+2, r1	; 0x02
	USART_String(UartString);
     b2a:	5e df       	rcall	.-324    	; 0x9e8 <_Z12USART_StringPc>
     b2c:	ea 96       	adiw	r28, 0x3a	; 58
     b2e:	0f b6       	in	r0, 0x3f	; 63
     b30:	f8 94       	cli
     b32:	de bf       	out	0x3e, r29	; 62
     b34:	0f be       	out	0x3f, r0	; 63
     b36:	cd bf       	out	0x3d, r28	; 61
     b38:	df 91       	pop	r29
     b3a:	cf 91       	pop	r28
     b3c:	1f 91       	pop	r17
     b3e:	0f 91       	pop	r16
     b40:	ff 90       	pop	r15
     b42:	ef 90       	pop	r14
     b44:	df 90       	pop	r13
     b46:	cf 90       	pop	r12
     b48:	bf 90       	pop	r11
     b4a:	9f 90       	pop	r9
     b4c:	8f 90       	pop	r8
     b4e:	08 95       	ret

00000b50 <__subsf3>:
     b50:	50 58       	subi	r21, 0x80	; 128

00000b52 <__addsf3>:
     b52:	bb 27       	eor	r27, r27
     b54:	aa 27       	eor	r26, r26
     b56:	0e d0       	rcall	.+28     	; 0xb74 <__addsf3x>
     b58:	d4 c1       	rjmp	.+936    	; 0xf02 <__fp_round>
     b5a:	c5 d1       	rcall	.+906    	; 0xee6 <__fp_pscA>
     b5c:	30 f0       	brcs	.+12     	; 0xb6a <__addsf3+0x18>
     b5e:	ca d1       	rcall	.+916    	; 0xef4 <__fp_pscB>
     b60:	20 f0       	brcs	.+8      	; 0xb6a <__addsf3+0x18>
     b62:	31 f4       	brne	.+12     	; 0xb70 <__addsf3+0x1e>
     b64:	9f 3f       	cpi	r25, 0xFF	; 255
     b66:	11 f4       	brne	.+4      	; 0xb6c <__addsf3+0x1a>
     b68:	1e f4       	brtc	.+6      	; 0xb70 <__addsf3+0x1e>
     b6a:	95 c1       	rjmp	.+810    	; 0xe96 <__fp_nan>
     b6c:	0e f4       	brtc	.+2      	; 0xb70 <__addsf3+0x1e>
     b6e:	e0 95       	com	r30
     b70:	e7 fb       	bst	r30, 7
     b72:	8b c1       	rjmp	.+790    	; 0xe8a <__fp_inf>

00000b74 <__addsf3x>:
     b74:	e9 2f       	mov	r30, r25
     b76:	d6 d1       	rcall	.+940    	; 0xf24 <__fp_split3>
     b78:	80 f3       	brcs	.-32     	; 0xb5a <__addsf3+0x8>
     b7a:	ba 17       	cp	r27, r26
     b7c:	62 07       	cpc	r22, r18
     b7e:	73 07       	cpc	r23, r19
     b80:	84 07       	cpc	r24, r20
     b82:	95 07       	cpc	r25, r21
     b84:	18 f0       	brcs	.+6      	; 0xb8c <__addsf3x+0x18>
     b86:	71 f4       	brne	.+28     	; 0xba4 <__addsf3x+0x30>
     b88:	9e f5       	brtc	.+102    	; 0xbf0 <__addsf3x+0x7c>
     b8a:	ee c1       	rjmp	.+988    	; 0xf68 <__fp_zero>
     b8c:	0e f4       	brtc	.+2      	; 0xb90 <__addsf3x+0x1c>
     b8e:	e0 95       	com	r30
     b90:	0b 2e       	mov	r0, r27
     b92:	ba 2f       	mov	r27, r26
     b94:	a0 2d       	mov	r26, r0
     b96:	0b 01       	movw	r0, r22
     b98:	b9 01       	movw	r22, r18
     b9a:	90 01       	movw	r18, r0
     b9c:	0c 01       	movw	r0, r24
     b9e:	ca 01       	movw	r24, r20
     ba0:	a0 01       	movw	r20, r0
     ba2:	11 24       	eor	r1, r1
     ba4:	ff 27       	eor	r31, r31
     ba6:	59 1b       	sub	r21, r25
     ba8:	99 f0       	breq	.+38     	; 0xbd0 <__addsf3x+0x5c>
     baa:	59 3f       	cpi	r21, 0xF9	; 249
     bac:	50 f4       	brcc	.+20     	; 0xbc2 <__addsf3x+0x4e>
     bae:	50 3e       	cpi	r21, 0xE0	; 224
     bb0:	68 f1       	brcs	.+90     	; 0xc0c <__addsf3x+0x98>
     bb2:	1a 16       	cp	r1, r26
     bb4:	f0 40       	sbci	r31, 0x00	; 0
     bb6:	a2 2f       	mov	r26, r18
     bb8:	23 2f       	mov	r18, r19
     bba:	34 2f       	mov	r19, r20
     bbc:	44 27       	eor	r20, r20
     bbe:	58 5f       	subi	r21, 0xF8	; 248
     bc0:	f3 cf       	rjmp	.-26     	; 0xba8 <__addsf3x+0x34>
     bc2:	46 95       	lsr	r20
     bc4:	37 95       	ror	r19
     bc6:	27 95       	ror	r18
     bc8:	a7 95       	ror	r26
     bca:	f0 40       	sbci	r31, 0x00	; 0
     bcc:	53 95       	inc	r21
     bce:	c9 f7       	brne	.-14     	; 0xbc2 <__addsf3x+0x4e>
     bd0:	7e f4       	brtc	.+30     	; 0xbf0 <__addsf3x+0x7c>
     bd2:	1f 16       	cp	r1, r31
     bd4:	ba 0b       	sbc	r27, r26
     bd6:	62 0b       	sbc	r22, r18
     bd8:	73 0b       	sbc	r23, r19
     bda:	84 0b       	sbc	r24, r20
     bdc:	ba f0       	brmi	.+46     	; 0xc0c <__addsf3x+0x98>
     bde:	91 50       	subi	r25, 0x01	; 1
     be0:	a1 f0       	breq	.+40     	; 0xc0a <__addsf3x+0x96>
     be2:	ff 0f       	add	r31, r31
     be4:	bb 1f       	adc	r27, r27
     be6:	66 1f       	adc	r22, r22
     be8:	77 1f       	adc	r23, r23
     bea:	88 1f       	adc	r24, r24
     bec:	c2 f7       	brpl	.-16     	; 0xbde <__addsf3x+0x6a>
     bee:	0e c0       	rjmp	.+28     	; 0xc0c <__addsf3x+0x98>
     bf0:	ba 0f       	add	r27, r26
     bf2:	62 1f       	adc	r22, r18
     bf4:	73 1f       	adc	r23, r19
     bf6:	84 1f       	adc	r24, r20
     bf8:	48 f4       	brcc	.+18     	; 0xc0c <__addsf3x+0x98>
     bfa:	87 95       	ror	r24
     bfc:	77 95       	ror	r23
     bfe:	67 95       	ror	r22
     c00:	b7 95       	ror	r27
     c02:	f7 95       	ror	r31
     c04:	9e 3f       	cpi	r25, 0xFE	; 254
     c06:	08 f0       	brcs	.+2      	; 0xc0a <__addsf3x+0x96>
     c08:	b3 cf       	rjmp	.-154    	; 0xb70 <__addsf3+0x1e>
     c0a:	93 95       	inc	r25
     c0c:	88 0f       	add	r24, r24
     c0e:	08 f0       	brcs	.+2      	; 0xc12 <__addsf3x+0x9e>
     c10:	99 27       	eor	r25, r25
     c12:	ee 0f       	add	r30, r30
     c14:	97 95       	ror	r25
     c16:	87 95       	ror	r24
     c18:	08 95       	ret
     c1a:	65 d1       	rcall	.+714    	; 0xee6 <__fp_pscA>
     c1c:	58 f0       	brcs	.+22     	; 0xc34 <__addsf3x+0xc0>
     c1e:	80 e8       	ldi	r24, 0x80	; 128
     c20:	91 e0       	ldi	r25, 0x01	; 1
     c22:	09 f4       	brne	.+2      	; 0xc26 <__addsf3x+0xb2>
     c24:	9e ef       	ldi	r25, 0xFE	; 254
     c26:	66 d1       	rcall	.+716    	; 0xef4 <__fp_pscB>
     c28:	28 f0       	brcs	.+10     	; 0xc34 <__addsf3x+0xc0>
     c2a:	40 e8       	ldi	r20, 0x80	; 128
     c2c:	51 e0       	ldi	r21, 0x01	; 1
     c2e:	59 f4       	brne	.+22     	; 0xc46 <atan2+0xe>
     c30:	5e ef       	ldi	r21, 0xFE	; 254
     c32:	09 c0       	rjmp	.+18     	; 0xc46 <atan2+0xe>
     c34:	30 c1       	rjmp	.+608    	; 0xe96 <__fp_nan>
     c36:	98 c1       	rjmp	.+816    	; 0xf68 <__fp_zero>

00000c38 <atan2>:
     c38:	e9 2f       	mov	r30, r25
     c3a:	e0 78       	andi	r30, 0x80	; 128
     c3c:	73 d1       	rcall	.+742    	; 0xf24 <__fp_split3>
     c3e:	68 f3       	brcs	.-38     	; 0xc1a <__addsf3x+0xa6>
     c40:	09 2e       	mov	r0, r25
     c42:	05 2a       	or	r0, r21
     c44:	c1 f3       	breq	.-16     	; 0xc36 <__addsf3x+0xc2>
     c46:	26 17       	cp	r18, r22
     c48:	37 07       	cpc	r19, r23
     c4a:	48 07       	cpc	r20, r24
     c4c:	59 07       	cpc	r21, r25
     c4e:	38 f0       	brcs	.+14     	; 0xc5e <atan2+0x26>
     c50:	0e 2e       	mov	r0, r30
     c52:	07 f8       	bld	r0, 7
     c54:	e0 25       	eor	r30, r0
     c56:	69 f0       	breq	.+26     	; 0xc72 <atan2+0x3a>
     c58:	e0 25       	eor	r30, r0
     c5a:	e0 64       	ori	r30, 0x40	; 64
     c5c:	0a c0       	rjmp	.+20     	; 0xc72 <atan2+0x3a>
     c5e:	ef 63       	ori	r30, 0x3F	; 63
     c60:	07 f8       	bld	r0, 7
     c62:	00 94       	com	r0
     c64:	07 fa       	bst	r0, 7
     c66:	db 01       	movw	r26, r22
     c68:	b9 01       	movw	r22, r18
     c6a:	9d 01       	movw	r18, r26
     c6c:	dc 01       	movw	r26, r24
     c6e:	ca 01       	movw	r24, r20
     c70:	ad 01       	movw	r20, r26
     c72:	ef 93       	push	r30
     c74:	43 d0       	rcall	.+134    	; 0xcfc <__divsf3_pse>
     c76:	45 d1       	rcall	.+650    	; 0xf02 <__fp_round>
     c78:	0a d0       	rcall	.+20     	; 0xc8e <atan>
     c7a:	5f 91       	pop	r21
     c7c:	55 23       	and	r21, r21
     c7e:	31 f0       	breq	.+12     	; 0xc8c <atan2+0x54>
     c80:	2b ed       	ldi	r18, 0xDB	; 219
     c82:	3f e0       	ldi	r19, 0x0F	; 15
     c84:	49 e4       	ldi	r20, 0x49	; 73
     c86:	50 fd       	sbrc	r21, 0
     c88:	49 ec       	ldi	r20, 0xC9	; 201
     c8a:	63 cf       	rjmp	.-314    	; 0xb52 <__addsf3>
     c8c:	08 95       	ret

00000c8e <atan>:
     c8e:	df 93       	push	r29
     c90:	dd 27       	eor	r29, r29
     c92:	b9 2f       	mov	r27, r25
     c94:	bf 77       	andi	r27, 0x7F	; 127
     c96:	40 e8       	ldi	r20, 0x80	; 128
     c98:	5f e3       	ldi	r21, 0x3F	; 63
     c9a:	16 16       	cp	r1, r22
     c9c:	17 06       	cpc	r1, r23
     c9e:	48 07       	cpc	r20, r24
     ca0:	5b 07       	cpc	r21, r27
     ca2:	10 f4       	brcc	.+4      	; 0xca8 <atan+0x1a>
     ca4:	d9 2f       	mov	r29, r25
     ca6:	67 d1       	rcall	.+718    	; 0xf76 <inverse>
     ca8:	9f 93       	push	r25
     caa:	8f 93       	push	r24
     cac:	7f 93       	push	r23
     cae:	6f 93       	push	r22
     cb0:	14 d2       	rcall	.+1064   	; 0x10da <square>
     cb2:	e6 e2       	ldi	r30, 0x26	; 38
     cb4:	f0 e0       	ldi	r31, 0x00	; 0
     cb6:	f2 d0       	rcall	.+484    	; 0xe9c <__fp_powser>
     cb8:	24 d1       	rcall	.+584    	; 0xf02 <__fp_round>
     cba:	2f 91       	pop	r18
     cbc:	3f 91       	pop	r19
     cbe:	4f 91       	pop	r20
     cc0:	5f 91       	pop	r21
     cc2:	6c d1       	rcall	.+728    	; 0xf9c <__mulsf3x>
     cc4:	dd 23       	and	r29, r29
     cc6:	49 f0       	breq	.+18     	; 0xcda <atan+0x4c>
     cc8:	90 58       	subi	r25, 0x80	; 128
     cca:	a2 ea       	ldi	r26, 0xA2	; 162
     ccc:	2a ed       	ldi	r18, 0xDA	; 218
     cce:	3f e0       	ldi	r19, 0x0F	; 15
     cd0:	49 ec       	ldi	r20, 0xC9	; 201
     cd2:	5f e3       	ldi	r21, 0x3F	; 63
     cd4:	d0 78       	andi	r29, 0x80	; 128
     cd6:	5d 27       	eor	r21, r29
     cd8:	4d df       	rcall	.-358    	; 0xb74 <__addsf3x>
     cda:	df 91       	pop	r29
     cdc:	12 c1       	rjmp	.+548    	; 0xf02 <__fp_round>

00000cde <__divsf3>:
     cde:	0c d0       	rcall	.+24     	; 0xcf8 <__divsf3x>
     ce0:	10 c1       	rjmp	.+544    	; 0xf02 <__fp_round>
     ce2:	08 d1       	rcall	.+528    	; 0xef4 <__fp_pscB>
     ce4:	40 f0       	brcs	.+16     	; 0xcf6 <__divsf3+0x18>
     ce6:	ff d0       	rcall	.+510    	; 0xee6 <__fp_pscA>
     ce8:	30 f0       	brcs	.+12     	; 0xcf6 <__divsf3+0x18>
     cea:	21 f4       	brne	.+8      	; 0xcf4 <__divsf3+0x16>
     cec:	5f 3f       	cpi	r21, 0xFF	; 255
     cee:	19 f0       	breq	.+6      	; 0xcf6 <__divsf3+0x18>
     cf0:	cc c0       	rjmp	.+408    	; 0xe8a <__fp_inf>
     cf2:	51 11       	cpse	r21, r1
     cf4:	3a c1       	rjmp	.+628    	; 0xf6a <__fp_szero>
     cf6:	cf c0       	rjmp	.+414    	; 0xe96 <__fp_nan>

00000cf8 <__divsf3x>:
     cf8:	15 d1       	rcall	.+554    	; 0xf24 <__fp_split3>
     cfa:	98 f3       	brcs	.-26     	; 0xce2 <__divsf3+0x4>

00000cfc <__divsf3_pse>:
     cfc:	99 23       	and	r25, r25
     cfe:	c9 f3       	breq	.-14     	; 0xcf2 <__divsf3+0x14>
     d00:	55 23       	and	r21, r21
     d02:	b1 f3       	breq	.-20     	; 0xcf0 <__divsf3+0x12>
     d04:	95 1b       	sub	r25, r21
     d06:	55 0b       	sbc	r21, r21
     d08:	bb 27       	eor	r27, r27
     d0a:	aa 27       	eor	r26, r26
     d0c:	62 17       	cp	r22, r18
     d0e:	73 07       	cpc	r23, r19
     d10:	84 07       	cpc	r24, r20
     d12:	38 f0       	brcs	.+14     	; 0xd22 <__divsf3_pse+0x26>
     d14:	9f 5f       	subi	r25, 0xFF	; 255
     d16:	5f 4f       	sbci	r21, 0xFF	; 255
     d18:	22 0f       	add	r18, r18
     d1a:	33 1f       	adc	r19, r19
     d1c:	44 1f       	adc	r20, r20
     d1e:	aa 1f       	adc	r26, r26
     d20:	a9 f3       	breq	.-22     	; 0xd0c <__divsf3_pse+0x10>
     d22:	33 d0       	rcall	.+102    	; 0xd8a <__divsf3_pse+0x8e>
     d24:	0e 2e       	mov	r0, r30
     d26:	3a f0       	brmi	.+14     	; 0xd36 <__divsf3_pse+0x3a>
     d28:	e0 e8       	ldi	r30, 0x80	; 128
     d2a:	30 d0       	rcall	.+96     	; 0xd8c <__divsf3_pse+0x90>
     d2c:	91 50       	subi	r25, 0x01	; 1
     d2e:	50 40       	sbci	r21, 0x00	; 0
     d30:	e6 95       	lsr	r30
     d32:	00 1c       	adc	r0, r0
     d34:	ca f7       	brpl	.-14     	; 0xd28 <__divsf3_pse+0x2c>
     d36:	29 d0       	rcall	.+82     	; 0xd8a <__divsf3_pse+0x8e>
     d38:	fe 2f       	mov	r31, r30
     d3a:	27 d0       	rcall	.+78     	; 0xd8a <__divsf3_pse+0x8e>
     d3c:	66 0f       	add	r22, r22
     d3e:	77 1f       	adc	r23, r23
     d40:	88 1f       	adc	r24, r24
     d42:	bb 1f       	adc	r27, r27
     d44:	26 17       	cp	r18, r22
     d46:	37 07       	cpc	r19, r23
     d48:	48 07       	cpc	r20, r24
     d4a:	ab 07       	cpc	r26, r27
     d4c:	b0 e8       	ldi	r27, 0x80	; 128
     d4e:	09 f0       	breq	.+2      	; 0xd52 <__divsf3_pse+0x56>
     d50:	bb 0b       	sbc	r27, r27
     d52:	80 2d       	mov	r24, r0
     d54:	bf 01       	movw	r22, r30
     d56:	ff 27       	eor	r31, r31
     d58:	93 58       	subi	r25, 0x83	; 131
     d5a:	5f 4f       	sbci	r21, 0xFF	; 255
     d5c:	2a f0       	brmi	.+10     	; 0xd68 <__divsf3_pse+0x6c>
     d5e:	9e 3f       	cpi	r25, 0xFE	; 254
     d60:	51 05       	cpc	r21, r1
     d62:	68 f0       	brcs	.+26     	; 0xd7e <__divsf3_pse+0x82>
     d64:	92 c0       	rjmp	.+292    	; 0xe8a <__fp_inf>
     d66:	01 c1       	rjmp	.+514    	; 0xf6a <__fp_szero>
     d68:	5f 3f       	cpi	r21, 0xFF	; 255
     d6a:	ec f3       	brlt	.-6      	; 0xd66 <__divsf3_pse+0x6a>
     d6c:	98 3e       	cpi	r25, 0xE8	; 232
     d6e:	dc f3       	brlt	.-10     	; 0xd66 <__divsf3_pse+0x6a>
     d70:	86 95       	lsr	r24
     d72:	77 95       	ror	r23
     d74:	67 95       	ror	r22
     d76:	b7 95       	ror	r27
     d78:	f7 95       	ror	r31
     d7a:	9f 5f       	subi	r25, 0xFF	; 255
     d7c:	c9 f7       	brne	.-14     	; 0xd70 <__divsf3_pse+0x74>
     d7e:	88 0f       	add	r24, r24
     d80:	91 1d       	adc	r25, r1
     d82:	96 95       	lsr	r25
     d84:	87 95       	ror	r24
     d86:	97 f9       	bld	r25, 7
     d88:	08 95       	ret
     d8a:	e1 e0       	ldi	r30, 0x01	; 1
     d8c:	66 0f       	add	r22, r22
     d8e:	77 1f       	adc	r23, r23
     d90:	88 1f       	adc	r24, r24
     d92:	bb 1f       	adc	r27, r27
     d94:	62 17       	cp	r22, r18
     d96:	73 07       	cpc	r23, r19
     d98:	84 07       	cpc	r24, r20
     d9a:	ba 07       	cpc	r27, r26
     d9c:	20 f0       	brcs	.+8      	; 0xda6 <__divsf3_pse+0xaa>
     d9e:	62 1b       	sub	r22, r18
     da0:	73 0b       	sbc	r23, r19
     da2:	84 0b       	sbc	r24, r20
     da4:	ba 0b       	sbc	r27, r26
     da6:	ee 1f       	adc	r30, r30
     da8:	88 f7       	brcc	.-30     	; 0xd8c <__divsf3_pse+0x90>
     daa:	e0 95       	com	r30
     dac:	08 95       	ret

00000dae <__fixsfsi>:
     dae:	04 d0       	rcall	.+8      	; 0xdb8 <__fixunssfsi>
     db0:	68 94       	set
     db2:	b1 11       	cpse	r27, r1
     db4:	da c0       	rjmp	.+436    	; 0xf6a <__fp_szero>
     db6:	08 95       	ret

00000db8 <__fixunssfsi>:
     db8:	bd d0       	rcall	.+378    	; 0xf34 <__fp_splitA>
     dba:	88 f0       	brcs	.+34     	; 0xdde <__fixunssfsi+0x26>
     dbc:	9f 57       	subi	r25, 0x7F	; 127
     dbe:	90 f0       	brcs	.+36     	; 0xde4 <__fixunssfsi+0x2c>
     dc0:	b9 2f       	mov	r27, r25
     dc2:	99 27       	eor	r25, r25
     dc4:	b7 51       	subi	r27, 0x17	; 23
     dc6:	a0 f0       	brcs	.+40     	; 0xdf0 <__fixunssfsi+0x38>
     dc8:	d1 f0       	breq	.+52     	; 0xdfe <__fixunssfsi+0x46>
     dca:	66 0f       	add	r22, r22
     dcc:	77 1f       	adc	r23, r23
     dce:	88 1f       	adc	r24, r24
     dd0:	99 1f       	adc	r25, r25
     dd2:	1a f0       	brmi	.+6      	; 0xdda <__fixunssfsi+0x22>
     dd4:	ba 95       	dec	r27
     dd6:	c9 f7       	brne	.-14     	; 0xdca <__fixunssfsi+0x12>
     dd8:	12 c0       	rjmp	.+36     	; 0xdfe <__fixunssfsi+0x46>
     dda:	b1 30       	cpi	r27, 0x01	; 1
     ddc:	81 f0       	breq	.+32     	; 0xdfe <__fixunssfsi+0x46>
     dde:	c4 d0       	rcall	.+392    	; 0xf68 <__fp_zero>
     de0:	b1 e0       	ldi	r27, 0x01	; 1
     de2:	08 95       	ret
     de4:	c1 c0       	rjmp	.+386    	; 0xf68 <__fp_zero>
     de6:	67 2f       	mov	r22, r23
     de8:	78 2f       	mov	r23, r24
     dea:	88 27       	eor	r24, r24
     dec:	b8 5f       	subi	r27, 0xF8	; 248
     dee:	39 f0       	breq	.+14     	; 0xdfe <__fixunssfsi+0x46>
     df0:	b9 3f       	cpi	r27, 0xF9	; 249
     df2:	cc f3       	brlt	.-14     	; 0xde6 <__fixunssfsi+0x2e>
     df4:	86 95       	lsr	r24
     df6:	77 95       	ror	r23
     df8:	67 95       	ror	r22
     dfa:	b3 95       	inc	r27
     dfc:	d9 f7       	brne	.-10     	; 0xdf4 <__fixunssfsi+0x3c>
     dfe:	3e f4       	brtc	.+14     	; 0xe0e <__fixunssfsi+0x56>
     e00:	90 95       	com	r25
     e02:	80 95       	com	r24
     e04:	70 95       	com	r23
     e06:	61 95       	neg	r22
     e08:	7f 4f       	sbci	r23, 0xFF	; 255
     e0a:	8f 4f       	sbci	r24, 0xFF	; 255
     e0c:	9f 4f       	sbci	r25, 0xFF	; 255
     e0e:	08 95       	ret

00000e10 <__floatunsisf>:
     e10:	e8 94       	clt
     e12:	09 c0       	rjmp	.+18     	; 0xe26 <__floatsisf+0x12>

00000e14 <__floatsisf>:
     e14:	97 fb       	bst	r25, 7
     e16:	3e f4       	brtc	.+14     	; 0xe26 <__floatsisf+0x12>
     e18:	90 95       	com	r25
     e1a:	80 95       	com	r24
     e1c:	70 95       	com	r23
     e1e:	61 95       	neg	r22
     e20:	7f 4f       	sbci	r23, 0xFF	; 255
     e22:	8f 4f       	sbci	r24, 0xFF	; 255
     e24:	9f 4f       	sbci	r25, 0xFF	; 255
     e26:	99 23       	and	r25, r25
     e28:	a9 f0       	breq	.+42     	; 0xe54 <__floatsisf+0x40>
     e2a:	f9 2f       	mov	r31, r25
     e2c:	96 e9       	ldi	r25, 0x96	; 150
     e2e:	bb 27       	eor	r27, r27
     e30:	93 95       	inc	r25
     e32:	f6 95       	lsr	r31
     e34:	87 95       	ror	r24
     e36:	77 95       	ror	r23
     e38:	67 95       	ror	r22
     e3a:	b7 95       	ror	r27
     e3c:	f1 11       	cpse	r31, r1
     e3e:	f8 cf       	rjmp	.-16     	; 0xe30 <__floatsisf+0x1c>
     e40:	fa f4       	brpl	.+62     	; 0xe80 <__floatsisf+0x6c>
     e42:	bb 0f       	add	r27, r27
     e44:	11 f4       	brne	.+4      	; 0xe4a <__floatsisf+0x36>
     e46:	60 ff       	sbrs	r22, 0
     e48:	1b c0       	rjmp	.+54     	; 0xe80 <__floatsisf+0x6c>
     e4a:	6f 5f       	subi	r22, 0xFF	; 255
     e4c:	7f 4f       	sbci	r23, 0xFF	; 255
     e4e:	8f 4f       	sbci	r24, 0xFF	; 255
     e50:	9f 4f       	sbci	r25, 0xFF	; 255
     e52:	16 c0       	rjmp	.+44     	; 0xe80 <__floatsisf+0x6c>
     e54:	88 23       	and	r24, r24
     e56:	11 f0       	breq	.+4      	; 0xe5c <__floatsisf+0x48>
     e58:	96 e9       	ldi	r25, 0x96	; 150
     e5a:	11 c0       	rjmp	.+34     	; 0xe7e <__floatsisf+0x6a>
     e5c:	77 23       	and	r23, r23
     e5e:	21 f0       	breq	.+8      	; 0xe68 <__floatsisf+0x54>
     e60:	9e e8       	ldi	r25, 0x8E	; 142
     e62:	87 2f       	mov	r24, r23
     e64:	76 2f       	mov	r23, r22
     e66:	05 c0       	rjmp	.+10     	; 0xe72 <__floatsisf+0x5e>
     e68:	66 23       	and	r22, r22
     e6a:	71 f0       	breq	.+28     	; 0xe88 <__floatsisf+0x74>
     e6c:	96 e8       	ldi	r25, 0x86	; 134
     e6e:	86 2f       	mov	r24, r22
     e70:	70 e0       	ldi	r23, 0x00	; 0
     e72:	60 e0       	ldi	r22, 0x00	; 0
     e74:	2a f0       	brmi	.+10     	; 0xe80 <__floatsisf+0x6c>
     e76:	9a 95       	dec	r25
     e78:	66 0f       	add	r22, r22
     e7a:	77 1f       	adc	r23, r23
     e7c:	88 1f       	adc	r24, r24
     e7e:	da f7       	brpl	.-10     	; 0xe76 <__floatsisf+0x62>
     e80:	88 0f       	add	r24, r24
     e82:	96 95       	lsr	r25
     e84:	87 95       	ror	r24
     e86:	97 f9       	bld	r25, 7
     e88:	08 95       	ret

00000e8a <__fp_inf>:
     e8a:	97 f9       	bld	r25, 7
     e8c:	9f 67       	ori	r25, 0x7F	; 127
     e8e:	80 e8       	ldi	r24, 0x80	; 128
     e90:	70 e0       	ldi	r23, 0x00	; 0
     e92:	60 e0       	ldi	r22, 0x00	; 0
     e94:	08 95       	ret

00000e96 <__fp_nan>:
     e96:	9f ef       	ldi	r25, 0xFF	; 255
     e98:	80 ec       	ldi	r24, 0xC0	; 192
     e9a:	08 95       	ret

00000e9c <__fp_powser>:
     e9c:	df 93       	push	r29
     e9e:	cf 93       	push	r28
     ea0:	1f 93       	push	r17
     ea2:	0f 93       	push	r16
     ea4:	ff 92       	push	r15
     ea6:	ef 92       	push	r14
     ea8:	df 92       	push	r13
     eaa:	7b 01       	movw	r14, r22
     eac:	8c 01       	movw	r16, r24
     eae:	68 94       	set
     eb0:	05 c0       	rjmp	.+10     	; 0xebc <__fp_powser+0x20>
     eb2:	da 2e       	mov	r13, r26
     eb4:	ef 01       	movw	r28, r30
     eb6:	72 d0       	rcall	.+228    	; 0xf9c <__mulsf3x>
     eb8:	fe 01       	movw	r30, r28
     eba:	e8 94       	clt
     ebc:	a5 91       	lpm	r26, Z+
     ebe:	25 91       	lpm	r18, Z+
     ec0:	35 91       	lpm	r19, Z+
     ec2:	45 91       	lpm	r20, Z+
     ec4:	55 91       	lpm	r21, Z+
     ec6:	ae f3       	brts	.-22     	; 0xeb2 <__fp_powser+0x16>
     ec8:	ef 01       	movw	r28, r30
     eca:	54 de       	rcall	.-856    	; 0xb74 <__addsf3x>
     ecc:	fe 01       	movw	r30, r28
     ece:	97 01       	movw	r18, r14
     ed0:	a8 01       	movw	r20, r16
     ed2:	da 94       	dec	r13
     ed4:	79 f7       	brne	.-34     	; 0xeb4 <__fp_powser+0x18>
     ed6:	df 90       	pop	r13
     ed8:	ef 90       	pop	r14
     eda:	ff 90       	pop	r15
     edc:	0f 91       	pop	r16
     ede:	1f 91       	pop	r17
     ee0:	cf 91       	pop	r28
     ee2:	df 91       	pop	r29
     ee4:	08 95       	ret

00000ee6 <__fp_pscA>:
     ee6:	00 24       	eor	r0, r0
     ee8:	0a 94       	dec	r0
     eea:	16 16       	cp	r1, r22
     eec:	17 06       	cpc	r1, r23
     eee:	18 06       	cpc	r1, r24
     ef0:	09 06       	cpc	r0, r25
     ef2:	08 95       	ret

00000ef4 <__fp_pscB>:
     ef4:	00 24       	eor	r0, r0
     ef6:	0a 94       	dec	r0
     ef8:	12 16       	cp	r1, r18
     efa:	13 06       	cpc	r1, r19
     efc:	14 06       	cpc	r1, r20
     efe:	05 06       	cpc	r0, r21
     f00:	08 95       	ret

00000f02 <__fp_round>:
     f02:	09 2e       	mov	r0, r25
     f04:	03 94       	inc	r0
     f06:	00 0c       	add	r0, r0
     f08:	11 f4       	brne	.+4      	; 0xf0e <__fp_round+0xc>
     f0a:	88 23       	and	r24, r24
     f0c:	52 f0       	brmi	.+20     	; 0xf22 <__fp_round+0x20>
     f0e:	bb 0f       	add	r27, r27
     f10:	40 f4       	brcc	.+16     	; 0xf22 <__fp_round+0x20>
     f12:	bf 2b       	or	r27, r31
     f14:	11 f4       	brne	.+4      	; 0xf1a <__fp_round+0x18>
     f16:	60 ff       	sbrs	r22, 0
     f18:	04 c0       	rjmp	.+8      	; 0xf22 <__fp_round+0x20>
     f1a:	6f 5f       	subi	r22, 0xFF	; 255
     f1c:	7f 4f       	sbci	r23, 0xFF	; 255
     f1e:	8f 4f       	sbci	r24, 0xFF	; 255
     f20:	9f 4f       	sbci	r25, 0xFF	; 255
     f22:	08 95       	ret

00000f24 <__fp_split3>:
     f24:	57 fd       	sbrc	r21, 7
     f26:	90 58       	subi	r25, 0x80	; 128
     f28:	44 0f       	add	r20, r20
     f2a:	55 1f       	adc	r21, r21
     f2c:	59 f0       	breq	.+22     	; 0xf44 <__fp_splitA+0x10>
     f2e:	5f 3f       	cpi	r21, 0xFF	; 255
     f30:	71 f0       	breq	.+28     	; 0xf4e <__fp_splitA+0x1a>
     f32:	47 95       	ror	r20

00000f34 <__fp_splitA>:
     f34:	88 0f       	add	r24, r24
     f36:	97 fb       	bst	r25, 7
     f38:	99 1f       	adc	r25, r25
     f3a:	61 f0       	breq	.+24     	; 0xf54 <__fp_splitA+0x20>
     f3c:	9f 3f       	cpi	r25, 0xFF	; 255
     f3e:	79 f0       	breq	.+30     	; 0xf5e <__fp_splitA+0x2a>
     f40:	87 95       	ror	r24
     f42:	08 95       	ret
     f44:	12 16       	cp	r1, r18
     f46:	13 06       	cpc	r1, r19
     f48:	14 06       	cpc	r1, r20
     f4a:	55 1f       	adc	r21, r21
     f4c:	f2 cf       	rjmp	.-28     	; 0xf32 <__fp_split3+0xe>
     f4e:	46 95       	lsr	r20
     f50:	f1 df       	rcall	.-30     	; 0xf34 <__fp_splitA>
     f52:	08 c0       	rjmp	.+16     	; 0xf64 <__fp_splitA+0x30>
     f54:	16 16       	cp	r1, r22
     f56:	17 06       	cpc	r1, r23
     f58:	18 06       	cpc	r1, r24
     f5a:	99 1f       	adc	r25, r25
     f5c:	f1 cf       	rjmp	.-30     	; 0xf40 <__fp_splitA+0xc>
     f5e:	86 95       	lsr	r24
     f60:	71 05       	cpc	r23, r1
     f62:	61 05       	cpc	r22, r1
     f64:	08 94       	sec
     f66:	08 95       	ret

00000f68 <__fp_zero>:
     f68:	e8 94       	clt

00000f6a <__fp_szero>:
     f6a:	bb 27       	eor	r27, r27
     f6c:	66 27       	eor	r22, r22
     f6e:	77 27       	eor	r23, r23
     f70:	cb 01       	movw	r24, r22
     f72:	97 f9       	bld	r25, 7
     f74:	08 95       	ret

00000f76 <inverse>:
     f76:	9b 01       	movw	r18, r22
     f78:	ac 01       	movw	r20, r24
     f7a:	60 e0       	ldi	r22, 0x00	; 0
     f7c:	70 e0       	ldi	r23, 0x00	; 0
     f7e:	80 e8       	ldi	r24, 0x80	; 128
     f80:	9f e3       	ldi	r25, 0x3F	; 63
     f82:	ad ce       	rjmp	.-678    	; 0xcde <__divsf3>

00000f84 <__mulsf3>:
     f84:	0b d0       	rcall	.+22     	; 0xf9c <__mulsf3x>
     f86:	bd cf       	rjmp	.-134    	; 0xf02 <__fp_round>
     f88:	ae df       	rcall	.-164    	; 0xee6 <__fp_pscA>
     f8a:	28 f0       	brcs	.+10     	; 0xf96 <__mulsf3+0x12>
     f8c:	b3 df       	rcall	.-154    	; 0xef4 <__fp_pscB>
     f8e:	18 f0       	brcs	.+6      	; 0xf96 <__mulsf3+0x12>
     f90:	95 23       	and	r25, r21
     f92:	09 f0       	breq	.+2      	; 0xf96 <__mulsf3+0x12>
     f94:	7a cf       	rjmp	.-268    	; 0xe8a <__fp_inf>
     f96:	7f cf       	rjmp	.-258    	; 0xe96 <__fp_nan>
     f98:	11 24       	eor	r1, r1
     f9a:	e7 cf       	rjmp	.-50     	; 0xf6a <__fp_szero>

00000f9c <__mulsf3x>:
     f9c:	c3 df       	rcall	.-122    	; 0xf24 <__fp_split3>
     f9e:	a0 f3       	brcs	.-24     	; 0xf88 <__mulsf3+0x4>

00000fa0 <__mulsf3_pse>:
     fa0:	95 9f       	mul	r25, r21
     fa2:	d1 f3       	breq	.-12     	; 0xf98 <__mulsf3+0x14>
     fa4:	95 0f       	add	r25, r21
     fa6:	50 e0       	ldi	r21, 0x00	; 0
     fa8:	55 1f       	adc	r21, r21
     faa:	62 9f       	mul	r22, r18
     fac:	f0 01       	movw	r30, r0
     fae:	72 9f       	mul	r23, r18
     fb0:	bb 27       	eor	r27, r27
     fb2:	f0 0d       	add	r31, r0
     fb4:	b1 1d       	adc	r27, r1
     fb6:	63 9f       	mul	r22, r19
     fb8:	aa 27       	eor	r26, r26
     fba:	f0 0d       	add	r31, r0
     fbc:	b1 1d       	adc	r27, r1
     fbe:	aa 1f       	adc	r26, r26
     fc0:	64 9f       	mul	r22, r20
     fc2:	66 27       	eor	r22, r22
     fc4:	b0 0d       	add	r27, r0
     fc6:	a1 1d       	adc	r26, r1
     fc8:	66 1f       	adc	r22, r22
     fca:	82 9f       	mul	r24, r18
     fcc:	22 27       	eor	r18, r18
     fce:	b0 0d       	add	r27, r0
     fd0:	a1 1d       	adc	r26, r1
     fd2:	62 1f       	adc	r22, r18
     fd4:	73 9f       	mul	r23, r19
     fd6:	b0 0d       	add	r27, r0
     fd8:	a1 1d       	adc	r26, r1
     fda:	62 1f       	adc	r22, r18
     fdc:	83 9f       	mul	r24, r19
     fde:	a0 0d       	add	r26, r0
     fe0:	61 1d       	adc	r22, r1
     fe2:	22 1f       	adc	r18, r18
     fe4:	74 9f       	mul	r23, r20
     fe6:	33 27       	eor	r19, r19
     fe8:	a0 0d       	add	r26, r0
     fea:	61 1d       	adc	r22, r1
     fec:	23 1f       	adc	r18, r19
     fee:	84 9f       	mul	r24, r20
     ff0:	60 0d       	add	r22, r0
     ff2:	21 1d       	adc	r18, r1
     ff4:	82 2f       	mov	r24, r18
     ff6:	76 2f       	mov	r23, r22
     ff8:	6a 2f       	mov	r22, r26
     ffa:	11 24       	eor	r1, r1
     ffc:	9f 57       	subi	r25, 0x7F	; 127
     ffe:	50 40       	sbci	r21, 0x00	; 0
    1000:	8a f0       	brmi	.+34     	; 0x1024 <__mulsf3_pse+0x84>
    1002:	e1 f0       	breq	.+56     	; 0x103c <__mulsf3_pse+0x9c>
    1004:	88 23       	and	r24, r24
    1006:	4a f0       	brmi	.+18     	; 0x101a <__mulsf3_pse+0x7a>
    1008:	ee 0f       	add	r30, r30
    100a:	ff 1f       	adc	r31, r31
    100c:	bb 1f       	adc	r27, r27
    100e:	66 1f       	adc	r22, r22
    1010:	77 1f       	adc	r23, r23
    1012:	88 1f       	adc	r24, r24
    1014:	91 50       	subi	r25, 0x01	; 1
    1016:	50 40       	sbci	r21, 0x00	; 0
    1018:	a9 f7       	brne	.-22     	; 0x1004 <__mulsf3_pse+0x64>
    101a:	9e 3f       	cpi	r25, 0xFE	; 254
    101c:	51 05       	cpc	r21, r1
    101e:	70 f0       	brcs	.+28     	; 0x103c <__mulsf3_pse+0x9c>
    1020:	34 cf       	rjmp	.-408    	; 0xe8a <__fp_inf>
    1022:	a3 cf       	rjmp	.-186    	; 0xf6a <__fp_szero>
    1024:	5f 3f       	cpi	r21, 0xFF	; 255
    1026:	ec f3       	brlt	.-6      	; 0x1022 <__mulsf3_pse+0x82>
    1028:	98 3e       	cpi	r25, 0xE8	; 232
    102a:	dc f3       	brlt	.-10     	; 0x1022 <__mulsf3_pse+0x82>
    102c:	86 95       	lsr	r24
    102e:	77 95       	ror	r23
    1030:	67 95       	ror	r22
    1032:	b7 95       	ror	r27
    1034:	f7 95       	ror	r31
    1036:	e7 95       	ror	r30
    1038:	9f 5f       	subi	r25, 0xFF	; 255
    103a:	c1 f7       	brne	.-16     	; 0x102c <__mulsf3_pse+0x8c>
    103c:	fe 2b       	or	r31, r30
    103e:	88 0f       	add	r24, r24
    1040:	91 1d       	adc	r25, r1
    1042:	96 95       	lsr	r25
    1044:	87 95       	ror	r24
    1046:	97 f9       	bld	r25, 7
    1048:	08 95       	ret

0000104a <sin>:
    104a:	9f 93       	push	r25
    104c:	5f d0       	rcall	.+190    	; 0x110c <__fp_rempio2>
    104e:	0f 90       	pop	r0
    1050:	07 fc       	sbrc	r0, 7
    1052:	ee 5f       	subi	r30, 0xFE	; 254
    1054:	82 c0       	rjmp	.+260    	; 0x115a <__fp_sinus>
    1056:	11 f4       	brne	.+4      	; 0x105c <sin+0x12>
    1058:	0e f4       	brtc	.+2      	; 0x105c <sin+0x12>
    105a:	1d cf       	rjmp	.-454    	; 0xe96 <__fp_nan>
    105c:	41 c0       	rjmp	.+130    	; 0x10e0 <__fp_mpack>

0000105e <sqrt>:
    105e:	6a df       	rcall	.-300    	; 0xf34 <__fp_splitA>
    1060:	d0 f3       	brcs	.-12     	; 0x1056 <sin+0xc>
    1062:	99 23       	and	r25, r25
    1064:	d9 f3       	breq	.-10     	; 0x105c <sin+0x12>
    1066:	ce f3       	brts	.-14     	; 0x105a <sin+0x10>
    1068:	9f 57       	subi	r25, 0x7F	; 127
    106a:	55 0b       	sbc	r21, r21
    106c:	87 ff       	sbrs	r24, 7
    106e:	46 d0       	rcall	.+140    	; 0x10fc <__fp_norm2>
    1070:	00 24       	eor	r0, r0
    1072:	a0 e6       	ldi	r26, 0x60	; 96
    1074:	40 ea       	ldi	r20, 0xA0	; 160
    1076:	90 01       	movw	r18, r0
    1078:	80 58       	subi	r24, 0x80	; 128
    107a:	56 95       	lsr	r21
    107c:	97 95       	ror	r25
    107e:	28 f4       	brcc	.+10     	; 0x108a <sqrt+0x2c>
    1080:	80 5c       	subi	r24, 0xC0	; 192
    1082:	66 0f       	add	r22, r22
    1084:	77 1f       	adc	r23, r23
    1086:	88 1f       	adc	r24, r24
    1088:	20 f0       	brcs	.+8      	; 0x1092 <sqrt+0x34>
    108a:	26 17       	cp	r18, r22
    108c:	37 07       	cpc	r19, r23
    108e:	48 07       	cpc	r20, r24
    1090:	30 f4       	brcc	.+12     	; 0x109e <sqrt+0x40>
    1092:	62 1b       	sub	r22, r18
    1094:	73 0b       	sbc	r23, r19
    1096:	84 0b       	sbc	r24, r20
    1098:	20 29       	or	r18, r0
    109a:	31 29       	or	r19, r1
    109c:	4a 2b       	or	r20, r26
    109e:	a6 95       	lsr	r26
    10a0:	17 94       	ror	r1
    10a2:	07 94       	ror	r0
    10a4:	20 25       	eor	r18, r0
    10a6:	31 25       	eor	r19, r1
    10a8:	4a 27       	eor	r20, r26
    10aa:	58 f7       	brcc	.-42     	; 0x1082 <sqrt+0x24>
    10ac:	66 0f       	add	r22, r22
    10ae:	77 1f       	adc	r23, r23
    10b0:	88 1f       	adc	r24, r24
    10b2:	20 f0       	brcs	.+8      	; 0x10bc <sqrt+0x5e>
    10b4:	26 17       	cp	r18, r22
    10b6:	37 07       	cpc	r19, r23
    10b8:	48 07       	cpc	r20, r24
    10ba:	30 f4       	brcc	.+12     	; 0x10c8 <sqrt+0x6a>
    10bc:	62 0b       	sbc	r22, r18
    10be:	73 0b       	sbc	r23, r19
    10c0:	84 0b       	sbc	r24, r20
    10c2:	20 0d       	add	r18, r0
    10c4:	31 1d       	adc	r19, r1
    10c6:	41 1d       	adc	r20, r1
    10c8:	a0 95       	com	r26
    10ca:	81 f7       	brne	.-32     	; 0x10ac <sqrt+0x4e>
    10cc:	b9 01       	movw	r22, r18
    10ce:	84 2f       	mov	r24, r20
    10d0:	91 58       	subi	r25, 0x81	; 129
    10d2:	88 0f       	add	r24, r24
    10d4:	96 95       	lsr	r25
    10d6:	87 95       	ror	r24
    10d8:	08 95       	ret

000010da <square>:
    10da:	9b 01       	movw	r18, r22
    10dc:	ac 01       	movw	r20, r24
    10de:	52 cf       	rjmp	.-348    	; 0xf84 <__mulsf3>

000010e0 <__fp_mpack>:
    10e0:	9f 3f       	cpi	r25, 0xFF	; 255
    10e2:	31 f0       	breq	.+12     	; 0x10f0 <__fp_mpack_finite+0xc>

000010e4 <__fp_mpack_finite>:
    10e4:	91 50       	subi	r25, 0x01	; 1
    10e6:	20 f4       	brcc	.+8      	; 0x10f0 <__fp_mpack_finite+0xc>
    10e8:	87 95       	ror	r24
    10ea:	77 95       	ror	r23
    10ec:	67 95       	ror	r22
    10ee:	b7 95       	ror	r27
    10f0:	88 0f       	add	r24, r24
    10f2:	91 1d       	adc	r25, r1
    10f4:	96 95       	lsr	r25
    10f6:	87 95       	ror	r24
    10f8:	97 f9       	bld	r25, 7
    10fa:	08 95       	ret

000010fc <__fp_norm2>:
    10fc:	91 50       	subi	r25, 0x01	; 1
    10fe:	50 40       	sbci	r21, 0x00	; 0
    1100:	66 0f       	add	r22, r22
    1102:	77 1f       	adc	r23, r23
    1104:	88 1f       	adc	r24, r24
    1106:	d2 f7       	brpl	.-12     	; 0x10fc <__fp_norm2>
    1108:	08 95       	ret
    110a:	c5 ce       	rjmp	.-630    	; 0xe96 <__fp_nan>

0000110c <__fp_rempio2>:
    110c:	13 df       	rcall	.-474    	; 0xf34 <__fp_splitA>
    110e:	e8 f3       	brcs	.-6      	; 0x110a <__fp_norm2+0xe>
    1110:	e8 94       	clt
    1112:	e0 e0       	ldi	r30, 0x00	; 0
    1114:	bb 27       	eor	r27, r27
    1116:	9f 57       	subi	r25, 0x7F	; 127
    1118:	f0 f0       	brcs	.+60     	; 0x1156 <__fp_rempio2+0x4a>
    111a:	2a ed       	ldi	r18, 0xDA	; 218
    111c:	3f e0       	ldi	r19, 0x0F	; 15
    111e:	49 ec       	ldi	r20, 0xC9	; 201
    1120:	06 c0       	rjmp	.+12     	; 0x112e <__fp_rempio2+0x22>
    1122:	ee 0f       	add	r30, r30
    1124:	bb 0f       	add	r27, r27
    1126:	66 1f       	adc	r22, r22
    1128:	77 1f       	adc	r23, r23
    112a:	88 1f       	adc	r24, r24
    112c:	28 f0       	brcs	.+10     	; 0x1138 <__fp_rempio2+0x2c>
    112e:	b2 3a       	cpi	r27, 0xA2	; 162
    1130:	62 07       	cpc	r22, r18
    1132:	73 07       	cpc	r23, r19
    1134:	84 07       	cpc	r24, r20
    1136:	28 f0       	brcs	.+10     	; 0x1142 <__fp_rempio2+0x36>
    1138:	b2 5a       	subi	r27, 0xA2	; 162
    113a:	62 0b       	sbc	r22, r18
    113c:	73 0b       	sbc	r23, r19
    113e:	84 0b       	sbc	r24, r20
    1140:	e3 95       	inc	r30
    1142:	9a 95       	dec	r25
    1144:	72 f7       	brpl	.-36     	; 0x1122 <__fp_rempio2+0x16>
    1146:	80 38       	cpi	r24, 0x80	; 128
    1148:	30 f4       	brcc	.+12     	; 0x1156 <__fp_rempio2+0x4a>
    114a:	9a 95       	dec	r25
    114c:	bb 0f       	add	r27, r27
    114e:	66 1f       	adc	r22, r22
    1150:	77 1f       	adc	r23, r23
    1152:	88 1f       	adc	r24, r24
    1154:	d2 f7       	brpl	.-12     	; 0x114a <__fp_rempio2+0x3e>
    1156:	90 48       	sbci	r25, 0x80	; 128
    1158:	c5 cf       	rjmp	.-118    	; 0x10e4 <__fp_mpack_finite>

0000115a <__fp_sinus>:
    115a:	ef 93       	push	r30
    115c:	e0 ff       	sbrs	r30, 0
    115e:	06 c0       	rjmp	.+12     	; 0x116c <__fp_sinus+0x12>
    1160:	a2 ea       	ldi	r26, 0xA2	; 162
    1162:	2a ed       	ldi	r18, 0xDA	; 218
    1164:	3f e0       	ldi	r19, 0x0F	; 15
    1166:	49 ec       	ldi	r20, 0xC9	; 201
    1168:	5f eb       	ldi	r21, 0xBF	; 191
    116a:	04 dd       	rcall	.-1528   	; 0xb74 <__addsf3x>
    116c:	ca de       	rcall	.-620    	; 0xf02 <__fp_round>
    116e:	0f 90       	pop	r0
    1170:	03 94       	inc	r0
    1172:	01 fc       	sbrc	r0, 1
    1174:	90 58       	subi	r25, 0x80	; 128
    1176:	e3 e5       	ldi	r30, 0x53	; 83
    1178:	f0 e0       	ldi	r31, 0x00	; 0
    117a:	00 c0       	rjmp	.+0      	; 0x117c <__fp_powsodd>

0000117c <__fp_powsodd>:
    117c:	9f 93       	push	r25
    117e:	8f 93       	push	r24
    1180:	7f 93       	push	r23
    1182:	6f 93       	push	r22
    1184:	ff 93       	push	r31
    1186:	ef 93       	push	r30
    1188:	9b 01       	movw	r18, r22
    118a:	ac 01       	movw	r20, r24
    118c:	fb de       	rcall	.-522    	; 0xf84 <__mulsf3>
    118e:	ef 91       	pop	r30
    1190:	ff 91       	pop	r31
    1192:	84 de       	rcall	.-760    	; 0xe9c <__fp_powser>
    1194:	2f 91       	pop	r18
    1196:	3f 91       	pop	r19
    1198:	4f 91       	pop	r20
    119a:	5f 91       	pop	r21
    119c:	f3 ce       	rjmp	.-538    	; 0xf84 <__mulsf3>

0000119e <__divmodsi4>:
    119e:	05 2e       	mov	r0, r21
    11a0:	97 fb       	bst	r25, 7
    11a2:	16 f4       	brtc	.+4      	; 0x11a8 <__divmodsi4+0xa>
    11a4:	00 94       	com	r0
    11a6:	0f d0       	rcall	.+30     	; 0x11c6 <__negsi2>
    11a8:	57 fd       	sbrc	r21, 7
    11aa:	05 d0       	rcall	.+10     	; 0x11b6 <__divmodsi4_neg2>
    11ac:	14 d0       	rcall	.+40     	; 0x11d6 <__udivmodsi4>
    11ae:	07 fc       	sbrc	r0, 7
    11b0:	02 d0       	rcall	.+4      	; 0x11b6 <__divmodsi4_neg2>
    11b2:	46 f4       	brtc	.+16     	; 0x11c4 <__divmodsi4_exit>
    11b4:	08 c0       	rjmp	.+16     	; 0x11c6 <__negsi2>

000011b6 <__divmodsi4_neg2>:
    11b6:	50 95       	com	r21
    11b8:	40 95       	com	r20
    11ba:	30 95       	com	r19
    11bc:	21 95       	neg	r18
    11be:	3f 4f       	sbci	r19, 0xFF	; 255
    11c0:	4f 4f       	sbci	r20, 0xFF	; 255
    11c2:	5f 4f       	sbci	r21, 0xFF	; 255

000011c4 <__divmodsi4_exit>:
    11c4:	08 95       	ret

000011c6 <__negsi2>:
    11c6:	90 95       	com	r25
    11c8:	80 95       	com	r24
    11ca:	70 95       	com	r23
    11cc:	61 95       	neg	r22
    11ce:	7f 4f       	sbci	r23, 0xFF	; 255
    11d0:	8f 4f       	sbci	r24, 0xFF	; 255
    11d2:	9f 4f       	sbci	r25, 0xFF	; 255
    11d4:	08 95       	ret

000011d6 <__udivmodsi4>:
    11d6:	a1 e2       	ldi	r26, 0x21	; 33
    11d8:	1a 2e       	mov	r1, r26
    11da:	aa 1b       	sub	r26, r26
    11dc:	bb 1b       	sub	r27, r27
    11de:	fd 01       	movw	r30, r26
    11e0:	0d c0       	rjmp	.+26     	; 0x11fc <__udivmodsi4_ep>

000011e2 <__udivmodsi4_loop>:
    11e2:	aa 1f       	adc	r26, r26
    11e4:	bb 1f       	adc	r27, r27
    11e6:	ee 1f       	adc	r30, r30
    11e8:	ff 1f       	adc	r31, r31
    11ea:	a2 17       	cp	r26, r18
    11ec:	b3 07       	cpc	r27, r19
    11ee:	e4 07       	cpc	r30, r20
    11f0:	f5 07       	cpc	r31, r21
    11f2:	20 f0       	brcs	.+8      	; 0x11fc <__udivmodsi4_ep>
    11f4:	a2 1b       	sub	r26, r18
    11f6:	b3 0b       	sbc	r27, r19
    11f8:	e4 0b       	sbc	r30, r20
    11fa:	f5 0b       	sbc	r31, r21

000011fc <__udivmodsi4_ep>:
    11fc:	66 1f       	adc	r22, r22
    11fe:	77 1f       	adc	r23, r23
    1200:	88 1f       	adc	r24, r24
    1202:	99 1f       	adc	r25, r25
    1204:	1a 94       	dec	r1
    1206:	69 f7       	brne	.-38     	; 0x11e2 <__udivmodsi4_loop>
    1208:	60 95       	com	r22
    120a:	70 95       	com	r23
    120c:	80 95       	com	r24
    120e:	90 95       	com	r25
    1210:	9b 01       	movw	r18, r22
    1212:	ac 01       	movw	r20, r24
    1214:	bd 01       	movw	r22, r26
    1216:	cf 01       	movw	r24, r30
    1218:	08 95       	ret

0000121a <dtostrf>:
    121a:	ef 92       	push	r14
    121c:	0f 93       	push	r16
    121e:	1f 93       	push	r17
    1220:	cf 93       	push	r28
    1222:	df 93       	push	r29
    1224:	e8 01       	movw	r28, r16
    1226:	47 fd       	sbrc	r20, 7
    1228:	02 c0       	rjmp	.+4      	; 0x122e <dtostrf+0x14>
    122a:	34 e0       	ldi	r19, 0x04	; 4
    122c:	01 c0       	rjmp	.+2      	; 0x1230 <dtostrf+0x16>
    122e:	34 e1       	ldi	r19, 0x14	; 20
    1230:	04 2e       	mov	r0, r20
    1232:	00 0c       	add	r0, r0
    1234:	55 0b       	sbc	r21, r21
    1236:	57 ff       	sbrs	r21, 7
    1238:	03 c0       	rjmp	.+6      	; 0x1240 <dtostrf+0x26>
    123a:	51 95       	neg	r21
    123c:	41 95       	neg	r20
    123e:	51 09       	sbc	r21, r1
    1240:	e3 2e       	mov	r14, r19
    1242:	02 2f       	mov	r16, r18
    1244:	24 2f       	mov	r18, r20
    1246:	ae 01       	movw	r20, r28
    1248:	12 d0       	rcall	.+36     	; 0x126e <dtoa_prf>
    124a:	ce 01       	movw	r24, r28
    124c:	df 91       	pop	r29
    124e:	cf 91       	pop	r28
    1250:	1f 91       	pop	r17
    1252:	0f 91       	pop	r16
    1254:	ef 90       	pop	r14
    1256:	08 95       	ret

00001258 <strcat>:
    1258:	fb 01       	movw	r30, r22
    125a:	dc 01       	movw	r26, r24
    125c:	0d 90       	ld	r0, X+
    125e:	00 20       	and	r0, r0
    1260:	e9 f7       	brne	.-6      	; 0x125c <strcat+0x4>
    1262:	11 97       	sbiw	r26, 0x01	; 1
    1264:	01 90       	ld	r0, Z+
    1266:	0d 92       	st	X+, r0
    1268:	00 20       	and	r0, r0
    126a:	e1 f7       	brne	.-8      	; 0x1264 <strcat+0xc>
    126c:	08 95       	ret

0000126e <dtoa_prf>:
    126e:	a9 e0       	ldi	r26, 0x09	; 9
    1270:	b0 e0       	ldi	r27, 0x00	; 0
    1272:	ec e3       	ldi	r30, 0x3C	; 60
    1274:	f9 e0       	ldi	r31, 0x09	; 9
    1276:	30 c2       	rjmp	.+1120   	; 0x16d8 <__prologue_saves__+0xc>
    1278:	6a 01       	movw	r12, r20
    127a:	12 2f       	mov	r17, r18
    127c:	b0 2e       	mov	r11, r16
    127e:	2b e3       	ldi	r18, 0x3B	; 59
    1280:	20 17       	cp	r18, r16
    1282:	20 f0       	brcs	.+8      	; 0x128c <dtoa_prf+0x1e>
    1284:	ff 24       	eor	r15, r15
    1286:	f3 94       	inc	r15
    1288:	f0 0e       	add	r15, r16
    128a:	02 c0       	rjmp	.+4      	; 0x1290 <dtoa_prf+0x22>
    128c:	2c e3       	ldi	r18, 0x3C	; 60
    128e:	f2 2e       	mov	r15, r18
    1290:	0f 2d       	mov	r16, r15
    1292:	27 e0       	ldi	r18, 0x07	; 7
    1294:	ae 01       	movw	r20, r28
    1296:	4f 5f       	subi	r20, 0xFF	; 255
    1298:	5f 4f       	sbci	r21, 0xFF	; 255
    129a:	40 d1       	rcall	.+640    	; 0x151c <__ftoa_engine>
    129c:	bc 01       	movw	r22, r24
    129e:	49 81       	ldd	r20, Y+1	; 0x01
    12a0:	84 2f       	mov	r24, r20
    12a2:	89 70       	andi	r24, 0x09	; 9
    12a4:	81 30       	cpi	r24, 0x01	; 1
    12a6:	31 f0       	breq	.+12     	; 0x12b4 <dtoa_prf+0x46>
    12a8:	e1 fc       	sbrc	r14, 1
    12aa:	06 c0       	rjmp	.+12     	; 0x12b8 <dtoa_prf+0x4a>
    12ac:	e0 fe       	sbrs	r14, 0
    12ae:	06 c0       	rjmp	.+12     	; 0x12bc <dtoa_prf+0x4e>
    12b0:	90 e2       	ldi	r25, 0x20	; 32
    12b2:	05 c0       	rjmp	.+10     	; 0x12be <dtoa_prf+0x50>
    12b4:	9d e2       	ldi	r25, 0x2D	; 45
    12b6:	03 c0       	rjmp	.+6      	; 0x12be <dtoa_prf+0x50>
    12b8:	9b e2       	ldi	r25, 0x2B	; 43
    12ba:	01 c0       	rjmp	.+2      	; 0x12be <dtoa_prf+0x50>
    12bc:	90 e0       	ldi	r25, 0x00	; 0
    12be:	5e 2d       	mov	r21, r14
    12c0:	50 71       	andi	r21, 0x10	; 16
    12c2:	43 ff       	sbrs	r20, 3
    12c4:	3c c0       	rjmp	.+120    	; 0x133e <dtoa_prf+0xd0>
    12c6:	91 11       	cpse	r25, r1
    12c8:	02 c0       	rjmp	.+4      	; 0x12ce <dtoa_prf+0x60>
    12ca:	83 e0       	ldi	r24, 0x03	; 3
    12cc:	01 c0       	rjmp	.+2      	; 0x12d0 <dtoa_prf+0x62>
    12ce:	84 e0       	ldi	r24, 0x04	; 4
    12d0:	81 17       	cp	r24, r17
    12d2:	18 f4       	brcc	.+6      	; 0x12da <dtoa_prf+0x6c>
    12d4:	21 2f       	mov	r18, r17
    12d6:	28 1b       	sub	r18, r24
    12d8:	01 c0       	rjmp	.+2      	; 0x12dc <dtoa_prf+0x6e>
    12da:	20 e0       	ldi	r18, 0x00	; 0
    12dc:	51 11       	cpse	r21, r1
    12de:	0b c0       	rjmp	.+22     	; 0x12f6 <dtoa_prf+0x88>
    12e0:	f6 01       	movw	r30, r12
    12e2:	82 2f       	mov	r24, r18
    12e4:	30 e2       	ldi	r19, 0x20	; 32
    12e6:	88 23       	and	r24, r24
    12e8:	19 f0       	breq	.+6      	; 0x12f0 <dtoa_prf+0x82>
    12ea:	31 93       	st	Z+, r19
    12ec:	81 50       	subi	r24, 0x01	; 1
    12ee:	fb cf       	rjmp	.-10     	; 0x12e6 <dtoa_prf+0x78>
    12f0:	c2 0e       	add	r12, r18
    12f2:	d1 1c       	adc	r13, r1
    12f4:	20 e0       	ldi	r18, 0x00	; 0
    12f6:	99 23       	and	r25, r25
    12f8:	29 f0       	breq	.+10     	; 0x1304 <dtoa_prf+0x96>
    12fa:	d6 01       	movw	r26, r12
    12fc:	9c 93       	st	X, r25
    12fe:	f6 01       	movw	r30, r12
    1300:	31 96       	adiw	r30, 0x01	; 1
    1302:	6f 01       	movw	r12, r30
    1304:	c6 01       	movw	r24, r12
    1306:	03 96       	adiw	r24, 0x03	; 3
    1308:	e2 fe       	sbrs	r14, 2
    130a:	0a c0       	rjmp	.+20     	; 0x1320 <dtoa_prf+0xb2>
    130c:	3e e4       	ldi	r19, 0x4E	; 78
    130e:	d6 01       	movw	r26, r12
    1310:	3c 93       	st	X, r19
    1312:	41 e4       	ldi	r20, 0x41	; 65
    1314:	11 96       	adiw	r26, 0x01	; 1
    1316:	4c 93       	st	X, r20
    1318:	11 97       	sbiw	r26, 0x01	; 1
    131a:	12 96       	adiw	r26, 0x02	; 2
    131c:	3c 93       	st	X, r19
    131e:	06 c0       	rjmp	.+12     	; 0x132c <dtoa_prf+0xbe>
    1320:	3e e6       	ldi	r19, 0x6E	; 110
    1322:	f6 01       	movw	r30, r12
    1324:	30 83       	st	Z, r19
    1326:	41 e6       	ldi	r20, 0x61	; 97
    1328:	41 83       	std	Z+1, r20	; 0x01
    132a:	32 83       	std	Z+2, r19	; 0x02
    132c:	fc 01       	movw	r30, r24
    132e:	32 2f       	mov	r19, r18
    1330:	40 e2       	ldi	r20, 0x20	; 32
    1332:	33 23       	and	r19, r19
    1334:	09 f4       	brne	.+2      	; 0x1338 <dtoa_prf+0xca>
    1336:	42 c0       	rjmp	.+132    	; 0x13bc <dtoa_prf+0x14e>
    1338:	41 93       	st	Z+, r20
    133a:	31 50       	subi	r19, 0x01	; 1
    133c:	fa cf       	rjmp	.-12     	; 0x1332 <dtoa_prf+0xc4>
    133e:	42 ff       	sbrs	r20, 2
    1340:	44 c0       	rjmp	.+136    	; 0x13ca <dtoa_prf+0x15c>
    1342:	91 11       	cpse	r25, r1
    1344:	02 c0       	rjmp	.+4      	; 0x134a <dtoa_prf+0xdc>
    1346:	83 e0       	ldi	r24, 0x03	; 3
    1348:	01 c0       	rjmp	.+2      	; 0x134c <dtoa_prf+0xde>
    134a:	84 e0       	ldi	r24, 0x04	; 4
    134c:	81 17       	cp	r24, r17
    134e:	18 f4       	brcc	.+6      	; 0x1356 <dtoa_prf+0xe8>
    1350:	21 2f       	mov	r18, r17
    1352:	28 1b       	sub	r18, r24
    1354:	01 c0       	rjmp	.+2      	; 0x1358 <dtoa_prf+0xea>
    1356:	20 e0       	ldi	r18, 0x00	; 0
    1358:	51 11       	cpse	r21, r1
    135a:	0b c0       	rjmp	.+22     	; 0x1372 <dtoa_prf+0x104>
    135c:	f6 01       	movw	r30, r12
    135e:	82 2f       	mov	r24, r18
    1360:	30 e2       	ldi	r19, 0x20	; 32
    1362:	88 23       	and	r24, r24
    1364:	19 f0       	breq	.+6      	; 0x136c <dtoa_prf+0xfe>
    1366:	31 93       	st	Z+, r19
    1368:	81 50       	subi	r24, 0x01	; 1
    136a:	fb cf       	rjmp	.-10     	; 0x1362 <dtoa_prf+0xf4>
    136c:	c2 0e       	add	r12, r18
    136e:	d1 1c       	adc	r13, r1
    1370:	20 e0       	ldi	r18, 0x00	; 0
    1372:	99 23       	and	r25, r25
    1374:	29 f0       	breq	.+10     	; 0x1380 <dtoa_prf+0x112>
    1376:	d6 01       	movw	r26, r12
    1378:	9c 93       	st	X, r25
    137a:	f6 01       	movw	r30, r12
    137c:	31 96       	adiw	r30, 0x01	; 1
    137e:	6f 01       	movw	r12, r30
    1380:	c6 01       	movw	r24, r12
    1382:	03 96       	adiw	r24, 0x03	; 3
    1384:	e2 fe       	sbrs	r14, 2
    1386:	0b c0       	rjmp	.+22     	; 0x139e <dtoa_prf+0x130>
    1388:	39 e4       	ldi	r19, 0x49	; 73
    138a:	d6 01       	movw	r26, r12
    138c:	3c 93       	st	X, r19
    138e:	3e e4       	ldi	r19, 0x4E	; 78
    1390:	11 96       	adiw	r26, 0x01	; 1
    1392:	3c 93       	st	X, r19
    1394:	11 97       	sbiw	r26, 0x01	; 1
    1396:	36 e4       	ldi	r19, 0x46	; 70
    1398:	12 96       	adiw	r26, 0x02	; 2
    139a:	3c 93       	st	X, r19
    139c:	07 c0       	rjmp	.+14     	; 0x13ac <dtoa_prf+0x13e>
    139e:	39 e6       	ldi	r19, 0x69	; 105
    13a0:	f6 01       	movw	r30, r12
    13a2:	30 83       	st	Z, r19
    13a4:	3e e6       	ldi	r19, 0x6E	; 110
    13a6:	31 83       	std	Z+1, r19	; 0x01
    13a8:	36 e6       	ldi	r19, 0x66	; 102
    13aa:	32 83       	std	Z+2, r19	; 0x02
    13ac:	fc 01       	movw	r30, r24
    13ae:	32 2f       	mov	r19, r18
    13b0:	40 e2       	ldi	r20, 0x20	; 32
    13b2:	33 23       	and	r19, r19
    13b4:	19 f0       	breq	.+6      	; 0x13bc <dtoa_prf+0x14e>
    13b6:	41 93       	st	Z+, r20
    13b8:	31 50       	subi	r19, 0x01	; 1
    13ba:	fb cf       	rjmp	.-10     	; 0x13b2 <dtoa_prf+0x144>
    13bc:	fc 01       	movw	r30, r24
    13be:	e2 0f       	add	r30, r18
    13c0:	f1 1d       	adc	r31, r1
    13c2:	10 82       	st	Z, r1
    13c4:	8e ef       	ldi	r24, 0xFE	; 254
    13c6:	9f ef       	ldi	r25, 0xFF	; 255
    13c8:	a6 c0       	rjmp	.+332    	; 0x1516 <dtoa_prf+0x2a8>
    13ca:	21 e0       	ldi	r18, 0x01	; 1
    13cc:	30 e0       	ldi	r19, 0x00	; 0
    13ce:	91 11       	cpse	r25, r1
    13d0:	02 c0       	rjmp	.+4      	; 0x13d6 <dtoa_prf+0x168>
    13d2:	20 e0       	ldi	r18, 0x00	; 0
    13d4:	30 e0       	ldi	r19, 0x00	; 0
    13d6:	16 16       	cp	r1, r22
    13d8:	17 06       	cpc	r1, r23
    13da:	1c f4       	brge	.+6      	; 0x13e2 <dtoa_prf+0x174>
    13dc:	fb 01       	movw	r30, r22
    13de:	31 96       	adiw	r30, 0x01	; 1
    13e0:	02 c0       	rjmp	.+4      	; 0x13e6 <dtoa_prf+0x178>
    13e2:	e1 e0       	ldi	r30, 0x01	; 1
    13e4:	f0 e0       	ldi	r31, 0x00	; 0
    13e6:	2e 0f       	add	r18, r30
    13e8:	3f 1f       	adc	r19, r31
    13ea:	bb 20       	and	r11, r11
    13ec:	21 f0       	breq	.+8      	; 0x13f6 <dtoa_prf+0x188>
    13ee:	eb 2d       	mov	r30, r11
    13f0:	f0 e0       	ldi	r31, 0x00	; 0
    13f2:	31 96       	adiw	r30, 0x01	; 1
    13f4:	02 c0       	rjmp	.+4      	; 0x13fa <dtoa_prf+0x18c>
    13f6:	e0 e0       	ldi	r30, 0x00	; 0
    13f8:	f0 e0       	ldi	r31, 0x00	; 0
    13fa:	2e 0f       	add	r18, r30
    13fc:	3f 1f       	adc	r19, r31
    13fe:	e1 2f       	mov	r30, r17
    1400:	f0 e0       	ldi	r31, 0x00	; 0
    1402:	2e 17       	cp	r18, r30
    1404:	3f 07       	cpc	r19, r31
    1406:	1c f4       	brge	.+6      	; 0x140e <dtoa_prf+0x1a0>
    1408:	12 1b       	sub	r17, r18
    140a:	21 2f       	mov	r18, r17
    140c:	01 c0       	rjmp	.+2      	; 0x1410 <dtoa_prf+0x1a2>
    140e:	20 e0       	ldi	r18, 0x00	; 0
    1410:	8e 2d       	mov	r24, r14
    1412:	88 71       	andi	r24, 0x18	; 24
    1414:	59 f4       	brne	.+22     	; 0x142c <dtoa_prf+0x1be>
    1416:	f6 01       	movw	r30, r12
    1418:	82 2f       	mov	r24, r18
    141a:	30 e2       	ldi	r19, 0x20	; 32
    141c:	88 23       	and	r24, r24
    141e:	19 f0       	breq	.+6      	; 0x1426 <dtoa_prf+0x1b8>
    1420:	31 93       	st	Z+, r19
    1422:	81 50       	subi	r24, 0x01	; 1
    1424:	fb cf       	rjmp	.-10     	; 0x141c <dtoa_prf+0x1ae>
    1426:	c2 0e       	add	r12, r18
    1428:	d1 1c       	adc	r13, r1
    142a:	20 e0       	ldi	r18, 0x00	; 0
    142c:	99 23       	and	r25, r25
    142e:	29 f0       	breq	.+10     	; 0x143a <dtoa_prf+0x1cc>
    1430:	d6 01       	movw	r26, r12
    1432:	9c 93       	st	X, r25
    1434:	f6 01       	movw	r30, r12
    1436:	31 96       	adiw	r30, 0x01	; 1
    1438:	6f 01       	movw	r12, r30
    143a:	51 11       	cpse	r21, r1
    143c:	0b c0       	rjmp	.+22     	; 0x1454 <dtoa_prf+0x1e6>
    143e:	f6 01       	movw	r30, r12
    1440:	82 2f       	mov	r24, r18
    1442:	90 e3       	ldi	r25, 0x30	; 48
    1444:	88 23       	and	r24, r24
    1446:	19 f0       	breq	.+6      	; 0x144e <dtoa_prf+0x1e0>
    1448:	91 93       	st	Z+, r25
    144a:	81 50       	subi	r24, 0x01	; 1
    144c:	fb cf       	rjmp	.-10     	; 0x1444 <dtoa_prf+0x1d6>
    144e:	c2 0e       	add	r12, r18
    1450:	d1 1c       	adc	r13, r1
    1452:	20 e0       	ldi	r18, 0x00	; 0
    1454:	0f 2d       	mov	r16, r15
    1456:	06 0f       	add	r16, r22
    1458:	9a 81       	ldd	r25, Y+2	; 0x02
    145a:	34 2f       	mov	r19, r20
    145c:	30 71       	andi	r19, 0x10	; 16
    145e:	44 ff       	sbrs	r20, 4
    1460:	03 c0       	rjmp	.+6      	; 0x1468 <dtoa_prf+0x1fa>
    1462:	91 33       	cpi	r25, 0x31	; 49
    1464:	09 f4       	brne	.+2      	; 0x1468 <dtoa_prf+0x1fa>
    1466:	01 50       	subi	r16, 0x01	; 1
    1468:	10 16       	cp	r1, r16
    146a:	24 f4       	brge	.+8      	; 0x1474 <dtoa_prf+0x206>
    146c:	09 30       	cpi	r16, 0x09	; 9
    146e:	18 f0       	brcs	.+6      	; 0x1476 <dtoa_prf+0x208>
    1470:	08 e0       	ldi	r16, 0x08	; 8
    1472:	01 c0       	rjmp	.+2      	; 0x1476 <dtoa_prf+0x208>
    1474:	01 e0       	ldi	r16, 0x01	; 1
    1476:	ab 01       	movw	r20, r22
    1478:	77 ff       	sbrs	r23, 7
    147a:	02 c0       	rjmp	.+4      	; 0x1480 <dtoa_prf+0x212>
    147c:	40 e0       	ldi	r20, 0x00	; 0
    147e:	50 e0       	ldi	r21, 0x00	; 0
    1480:	fb 01       	movw	r30, r22
    1482:	e4 1b       	sub	r30, r20
    1484:	f5 0b       	sbc	r31, r21
    1486:	a1 e0       	ldi	r26, 0x01	; 1
    1488:	b0 e0       	ldi	r27, 0x00	; 0
    148a:	ac 0f       	add	r26, r28
    148c:	bd 1f       	adc	r27, r29
    148e:	ea 0f       	add	r30, r26
    1490:	fb 1f       	adc	r31, r27
    1492:	8e e2       	ldi	r24, 0x2E	; 46
    1494:	a8 2e       	mov	r10, r24
    1496:	4b 01       	movw	r8, r22
    1498:	80 1a       	sub	r8, r16
    149a:	91 08       	sbc	r9, r1
    149c:	0b 2d       	mov	r16, r11
    149e:	10 e0       	ldi	r17, 0x00	; 0
    14a0:	11 95       	neg	r17
    14a2:	01 95       	neg	r16
    14a4:	11 09       	sbc	r17, r1
    14a6:	4f 3f       	cpi	r20, 0xFF	; 255
    14a8:	bf ef       	ldi	r27, 0xFF	; 255
    14aa:	5b 07       	cpc	r21, r27
    14ac:	21 f4       	brne	.+8      	; 0x14b6 <dtoa_prf+0x248>
    14ae:	d6 01       	movw	r26, r12
    14b0:	ac 92       	st	X, r10
    14b2:	11 96       	adiw	r26, 0x01	; 1
    14b4:	6d 01       	movw	r12, r26
    14b6:	64 17       	cp	r22, r20
    14b8:	75 07       	cpc	r23, r21
    14ba:	2c f0       	brlt	.+10     	; 0x14c6 <dtoa_prf+0x258>
    14bc:	84 16       	cp	r8, r20
    14be:	95 06       	cpc	r9, r21
    14c0:	14 f4       	brge	.+4      	; 0x14c6 <dtoa_prf+0x258>
    14c2:	81 81       	ldd	r24, Z+1	; 0x01
    14c4:	01 c0       	rjmp	.+2      	; 0x14c8 <dtoa_prf+0x25a>
    14c6:	80 e3       	ldi	r24, 0x30	; 48
    14c8:	41 50       	subi	r20, 0x01	; 1
    14ca:	51 09       	sbc	r21, r1
    14cc:	31 96       	adiw	r30, 0x01	; 1
    14ce:	d6 01       	movw	r26, r12
    14d0:	11 96       	adiw	r26, 0x01	; 1
    14d2:	7d 01       	movw	r14, r26
    14d4:	40 17       	cp	r20, r16
    14d6:	51 07       	cpc	r21, r17
    14d8:	24 f0       	brlt	.+8      	; 0x14e2 <dtoa_prf+0x274>
    14da:	d6 01       	movw	r26, r12
    14dc:	8c 93       	st	X, r24
    14de:	67 01       	movw	r12, r14
    14e0:	e2 cf       	rjmp	.-60     	; 0x14a6 <dtoa_prf+0x238>
    14e2:	64 17       	cp	r22, r20
    14e4:	75 07       	cpc	r23, r21
    14e6:	39 f4       	brne	.+14     	; 0x14f6 <dtoa_prf+0x288>
    14e8:	96 33       	cpi	r25, 0x36	; 54
    14ea:	20 f4       	brcc	.+8      	; 0x14f4 <dtoa_prf+0x286>
    14ec:	95 33       	cpi	r25, 0x35	; 53
    14ee:	19 f4       	brne	.+6      	; 0x14f6 <dtoa_prf+0x288>
    14f0:	31 11       	cpse	r19, r1
    14f2:	01 c0       	rjmp	.+2      	; 0x14f6 <dtoa_prf+0x288>
    14f4:	81 e3       	ldi	r24, 0x31	; 49
    14f6:	f6 01       	movw	r30, r12
    14f8:	80 83       	st	Z, r24
    14fa:	f7 01       	movw	r30, r14
    14fc:	82 2f       	mov	r24, r18
    14fe:	90 e2       	ldi	r25, 0x20	; 32
    1500:	88 23       	and	r24, r24
    1502:	19 f0       	breq	.+6      	; 0x150a <dtoa_prf+0x29c>
    1504:	91 93       	st	Z+, r25
    1506:	81 50       	subi	r24, 0x01	; 1
    1508:	fb cf       	rjmp	.-10     	; 0x1500 <dtoa_prf+0x292>
    150a:	f7 01       	movw	r30, r14
    150c:	e2 0f       	add	r30, r18
    150e:	f1 1d       	adc	r31, r1
    1510:	10 82       	st	Z, r1
    1512:	80 e0       	ldi	r24, 0x00	; 0
    1514:	90 e0       	ldi	r25, 0x00	; 0
    1516:	29 96       	adiw	r28, 0x09	; 9
    1518:	ec e0       	ldi	r30, 0x0C	; 12
    151a:	fa c0       	rjmp	.+500    	; 0x1710 <__epilogue_restores__+0xc>

0000151c <__ftoa_engine>:
    151c:	28 30       	cpi	r18, 0x08	; 8
    151e:	08 f0       	brcs	.+2      	; 0x1522 <__ftoa_engine+0x6>
    1520:	27 e0       	ldi	r18, 0x07	; 7
    1522:	33 27       	eor	r19, r19
    1524:	da 01       	movw	r26, r20
    1526:	99 0f       	add	r25, r25
    1528:	31 1d       	adc	r19, r1
    152a:	87 fd       	sbrc	r24, 7
    152c:	91 60       	ori	r25, 0x01	; 1
    152e:	00 96       	adiw	r24, 0x00	; 0
    1530:	61 05       	cpc	r22, r1
    1532:	71 05       	cpc	r23, r1
    1534:	39 f4       	brne	.+14     	; 0x1544 <__ftoa_engine+0x28>
    1536:	32 60       	ori	r19, 0x02	; 2
    1538:	2e 5f       	subi	r18, 0xFE	; 254
    153a:	3d 93       	st	X+, r19
    153c:	30 e3       	ldi	r19, 0x30	; 48
    153e:	2a 95       	dec	r18
    1540:	e1 f7       	brne	.-8      	; 0x153a <__ftoa_engine+0x1e>
    1542:	08 95       	ret
    1544:	9f 3f       	cpi	r25, 0xFF	; 255
    1546:	30 f0       	brcs	.+12     	; 0x1554 <__ftoa_engine+0x38>
    1548:	80 38       	cpi	r24, 0x80	; 128
    154a:	71 05       	cpc	r23, r1
    154c:	61 05       	cpc	r22, r1
    154e:	09 f0       	breq	.+2      	; 0x1552 <__ftoa_engine+0x36>
    1550:	3c 5f       	subi	r19, 0xFC	; 252
    1552:	3c 5f       	subi	r19, 0xFC	; 252
    1554:	3d 93       	st	X+, r19
    1556:	91 30       	cpi	r25, 0x01	; 1
    1558:	08 f0       	brcs	.+2      	; 0x155c <__ftoa_engine+0x40>
    155a:	80 68       	ori	r24, 0x80	; 128
    155c:	91 1d       	adc	r25, r1
    155e:	df 93       	push	r29
    1560:	cf 93       	push	r28
    1562:	1f 93       	push	r17
    1564:	0f 93       	push	r16
    1566:	ff 92       	push	r15
    1568:	ef 92       	push	r14
    156a:	19 2f       	mov	r17, r25
    156c:	98 7f       	andi	r25, 0xF8	; 248
    156e:	96 95       	lsr	r25
    1570:	e9 2f       	mov	r30, r25
    1572:	96 95       	lsr	r25
    1574:	96 95       	lsr	r25
    1576:	e9 0f       	add	r30, r25
    1578:	ff 27       	eor	r31, r31
    157a:	e4 53       	subi	r30, 0x34	; 52
    157c:	ff 4f       	sbci	r31, 0xFF	; 255
    157e:	99 27       	eor	r25, r25
    1580:	33 27       	eor	r19, r19
    1582:	ee 24       	eor	r14, r14
    1584:	ff 24       	eor	r15, r15
    1586:	a7 01       	movw	r20, r14
    1588:	e7 01       	movw	r28, r14
    158a:	05 90       	lpm	r0, Z+
    158c:	08 94       	sec
    158e:	07 94       	ror	r0
    1590:	28 f4       	brcc	.+10     	; 0x159c <__ftoa_engine+0x80>
    1592:	36 0f       	add	r19, r22
    1594:	e7 1e       	adc	r14, r23
    1596:	f8 1e       	adc	r15, r24
    1598:	49 1f       	adc	r20, r25
    159a:	51 1d       	adc	r21, r1
    159c:	66 0f       	add	r22, r22
    159e:	77 1f       	adc	r23, r23
    15a0:	88 1f       	adc	r24, r24
    15a2:	99 1f       	adc	r25, r25
    15a4:	06 94       	lsr	r0
    15a6:	a1 f7       	brne	.-24     	; 0x1590 <__ftoa_engine+0x74>
    15a8:	05 90       	lpm	r0, Z+
    15aa:	07 94       	ror	r0
    15ac:	28 f4       	brcc	.+10     	; 0x15b8 <__ftoa_engine+0x9c>
    15ae:	e7 0e       	add	r14, r23
    15b0:	f8 1e       	adc	r15, r24
    15b2:	49 1f       	adc	r20, r25
    15b4:	56 1f       	adc	r21, r22
    15b6:	c1 1d       	adc	r28, r1
    15b8:	77 0f       	add	r23, r23
    15ba:	88 1f       	adc	r24, r24
    15bc:	99 1f       	adc	r25, r25
    15be:	66 1f       	adc	r22, r22
    15c0:	06 94       	lsr	r0
    15c2:	a1 f7       	brne	.-24     	; 0x15ac <__ftoa_engine+0x90>
    15c4:	05 90       	lpm	r0, Z+
    15c6:	07 94       	ror	r0
    15c8:	28 f4       	brcc	.+10     	; 0x15d4 <__ftoa_engine+0xb8>
    15ca:	f8 0e       	add	r15, r24
    15cc:	49 1f       	adc	r20, r25
    15ce:	56 1f       	adc	r21, r22
    15d0:	c7 1f       	adc	r28, r23
    15d2:	d1 1d       	adc	r29, r1
    15d4:	88 0f       	add	r24, r24
    15d6:	99 1f       	adc	r25, r25
    15d8:	66 1f       	adc	r22, r22
    15da:	77 1f       	adc	r23, r23
    15dc:	06 94       	lsr	r0
    15de:	a1 f7       	brne	.-24     	; 0x15c8 <__ftoa_engine+0xac>
    15e0:	05 90       	lpm	r0, Z+
    15e2:	07 94       	ror	r0
    15e4:	20 f4       	brcc	.+8      	; 0x15ee <__ftoa_engine+0xd2>
    15e6:	49 0f       	add	r20, r25
    15e8:	56 1f       	adc	r21, r22
    15ea:	c7 1f       	adc	r28, r23
    15ec:	d8 1f       	adc	r29, r24
    15ee:	99 0f       	add	r25, r25
    15f0:	66 1f       	adc	r22, r22
    15f2:	77 1f       	adc	r23, r23
    15f4:	88 1f       	adc	r24, r24
    15f6:	06 94       	lsr	r0
    15f8:	a9 f7       	brne	.-22     	; 0x15e4 <__ftoa_engine+0xc8>
    15fa:	84 91       	lpm	r24, Z
    15fc:	10 95       	com	r17
    15fe:	17 70       	andi	r17, 0x07	; 7
    1600:	41 f0       	breq	.+16     	; 0x1612 <__ftoa_engine+0xf6>
    1602:	d6 95       	lsr	r29
    1604:	c7 95       	ror	r28
    1606:	57 95       	ror	r21
    1608:	47 95       	ror	r20
    160a:	f7 94       	ror	r15
    160c:	e7 94       	ror	r14
    160e:	1a 95       	dec	r17
    1610:	c1 f7       	brne	.-16     	; 0x1602 <__ftoa_engine+0xe6>
    1612:	e2 e7       	ldi	r30, 0x72	; 114
    1614:	f0 e0       	ldi	r31, 0x00	; 0
    1616:	68 94       	set
    1618:	15 90       	lpm	r1, Z+
    161a:	15 91       	lpm	r17, Z+
    161c:	35 91       	lpm	r19, Z+
    161e:	65 91       	lpm	r22, Z+
    1620:	95 91       	lpm	r25, Z+
    1622:	05 90       	lpm	r0, Z+
    1624:	7f e2       	ldi	r23, 0x2F	; 47
    1626:	73 95       	inc	r23
    1628:	e1 18       	sub	r14, r1
    162a:	f1 0a       	sbc	r15, r17
    162c:	43 0b       	sbc	r20, r19
    162e:	56 0b       	sbc	r21, r22
    1630:	c9 0b       	sbc	r28, r25
    1632:	d0 09       	sbc	r29, r0
    1634:	c0 f7       	brcc	.-16     	; 0x1626 <__ftoa_engine+0x10a>
    1636:	e1 0c       	add	r14, r1
    1638:	f1 1e       	adc	r15, r17
    163a:	43 1f       	adc	r20, r19
    163c:	56 1f       	adc	r21, r22
    163e:	c9 1f       	adc	r28, r25
    1640:	d0 1d       	adc	r29, r0
    1642:	7e f4       	brtc	.+30     	; 0x1662 <__ftoa_engine+0x146>
    1644:	70 33       	cpi	r23, 0x30	; 48
    1646:	11 f4       	brne	.+4      	; 0x164c <__ftoa_engine+0x130>
    1648:	8a 95       	dec	r24
    164a:	e6 cf       	rjmp	.-52     	; 0x1618 <__ftoa_engine+0xfc>
    164c:	e8 94       	clt
    164e:	01 50       	subi	r16, 0x01	; 1
    1650:	30 f0       	brcs	.+12     	; 0x165e <__ftoa_engine+0x142>
    1652:	08 0f       	add	r16, r24
    1654:	0a f4       	brpl	.+2      	; 0x1658 <__ftoa_engine+0x13c>
    1656:	00 27       	eor	r16, r16
    1658:	02 17       	cp	r16, r18
    165a:	08 f4       	brcc	.+2      	; 0x165e <__ftoa_engine+0x142>
    165c:	20 2f       	mov	r18, r16
    165e:	23 95       	inc	r18
    1660:	02 2f       	mov	r16, r18
    1662:	7a 33       	cpi	r23, 0x3A	; 58
    1664:	28 f0       	brcs	.+10     	; 0x1670 <__ftoa_engine+0x154>
    1666:	79 e3       	ldi	r23, 0x39	; 57
    1668:	7d 93       	st	X+, r23
    166a:	2a 95       	dec	r18
    166c:	e9 f7       	brne	.-6      	; 0x1668 <__ftoa_engine+0x14c>
    166e:	10 c0       	rjmp	.+32     	; 0x1690 <__ftoa_engine+0x174>
    1670:	7d 93       	st	X+, r23
    1672:	2a 95       	dec	r18
    1674:	89 f6       	brne	.-94     	; 0x1618 <__ftoa_engine+0xfc>
    1676:	06 94       	lsr	r0
    1678:	97 95       	ror	r25
    167a:	67 95       	ror	r22
    167c:	37 95       	ror	r19
    167e:	17 95       	ror	r17
    1680:	17 94       	ror	r1
    1682:	e1 18       	sub	r14, r1
    1684:	f1 0a       	sbc	r15, r17
    1686:	43 0b       	sbc	r20, r19
    1688:	56 0b       	sbc	r21, r22
    168a:	c9 0b       	sbc	r28, r25
    168c:	d0 09       	sbc	r29, r0
    168e:	98 f0       	brcs	.+38     	; 0x16b6 <__ftoa_engine+0x19a>
    1690:	23 95       	inc	r18
    1692:	7e 91       	ld	r23, -X
    1694:	73 95       	inc	r23
    1696:	7a 33       	cpi	r23, 0x3A	; 58
    1698:	08 f0       	brcs	.+2      	; 0x169c <__ftoa_engine+0x180>
    169a:	70 e3       	ldi	r23, 0x30	; 48
    169c:	7c 93       	st	X, r23
    169e:	20 13       	cpse	r18, r16
    16a0:	b8 f7       	brcc	.-18     	; 0x1690 <__ftoa_engine+0x174>
    16a2:	7e 91       	ld	r23, -X
    16a4:	70 61       	ori	r23, 0x10	; 16
    16a6:	7d 93       	st	X+, r23
    16a8:	30 f0       	brcs	.+12     	; 0x16b6 <__ftoa_engine+0x19a>
    16aa:	83 95       	inc	r24
    16ac:	71 e3       	ldi	r23, 0x31	; 49
    16ae:	7d 93       	st	X+, r23
    16b0:	70 e3       	ldi	r23, 0x30	; 48
    16b2:	2a 95       	dec	r18
    16b4:	e1 f7       	brne	.-8      	; 0x16ae <__ftoa_engine+0x192>
    16b6:	11 24       	eor	r1, r1
    16b8:	ef 90       	pop	r14
    16ba:	ff 90       	pop	r15
    16bc:	0f 91       	pop	r16
    16be:	1f 91       	pop	r17
    16c0:	cf 91       	pop	r28
    16c2:	df 91       	pop	r29
    16c4:	99 27       	eor	r25, r25
    16c6:	87 fd       	sbrc	r24, 7
    16c8:	90 95       	com	r25
    16ca:	08 95       	ret

000016cc <__prologue_saves__>:
    16cc:	2f 92       	push	r2
    16ce:	3f 92       	push	r3
    16d0:	4f 92       	push	r4
    16d2:	5f 92       	push	r5
    16d4:	6f 92       	push	r6
    16d6:	7f 92       	push	r7
    16d8:	8f 92       	push	r8
    16da:	9f 92       	push	r9
    16dc:	af 92       	push	r10
    16de:	bf 92       	push	r11
    16e0:	cf 92       	push	r12
    16e2:	df 92       	push	r13
    16e4:	ef 92       	push	r14
    16e6:	ff 92       	push	r15
    16e8:	0f 93       	push	r16
    16ea:	1f 93       	push	r17
    16ec:	cf 93       	push	r28
    16ee:	df 93       	push	r29
    16f0:	cd b7       	in	r28, 0x3d	; 61
    16f2:	de b7       	in	r29, 0x3e	; 62
    16f4:	ca 1b       	sub	r28, r26
    16f6:	db 0b       	sbc	r29, r27
    16f8:	0f b6       	in	r0, 0x3f	; 63
    16fa:	f8 94       	cli
    16fc:	de bf       	out	0x3e, r29	; 62
    16fe:	0f be       	out	0x3f, r0	; 63
    1700:	cd bf       	out	0x3d, r28	; 61
    1702:	09 94       	ijmp

00001704 <__epilogue_restores__>:
    1704:	2a 88       	ldd	r2, Y+18	; 0x12
    1706:	39 88       	ldd	r3, Y+17	; 0x11
    1708:	48 88       	ldd	r4, Y+16	; 0x10
    170a:	5f 84       	ldd	r5, Y+15	; 0x0f
    170c:	6e 84       	ldd	r6, Y+14	; 0x0e
    170e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1710:	8c 84       	ldd	r8, Y+12	; 0x0c
    1712:	9b 84       	ldd	r9, Y+11	; 0x0b
    1714:	aa 84       	ldd	r10, Y+10	; 0x0a
    1716:	b9 84       	ldd	r11, Y+9	; 0x09
    1718:	c8 84       	ldd	r12, Y+8	; 0x08
    171a:	df 80       	ldd	r13, Y+7	; 0x07
    171c:	ee 80       	ldd	r14, Y+6	; 0x06
    171e:	fd 80       	ldd	r15, Y+5	; 0x05
    1720:	0c 81       	ldd	r16, Y+4	; 0x04
    1722:	1b 81       	ldd	r17, Y+3	; 0x03
    1724:	aa 81       	ldd	r26, Y+2	; 0x02
    1726:	b9 81       	ldd	r27, Y+1	; 0x01
    1728:	ce 0f       	add	r28, r30
    172a:	d1 1d       	adc	r29, r1
    172c:	0f b6       	in	r0, 0x3f	; 63
    172e:	f8 94       	cli
    1730:	de bf       	out	0x3e, r29	; 62
    1732:	0f be       	out	0x3f, r0	; 63
    1734:	cd bf       	out	0x3d, r28	; 61
    1736:	ed 01       	movw	r28, r26
    1738:	08 95       	ret

0000173a <_exit>:
    173a:	f8 94       	cli

0000173c <__stop_program>:
    173c:	ff cf       	rjmp	.-2      	; 0x173c <__stop_program>
